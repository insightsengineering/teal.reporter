[{"path":"https://insightsengineering.github.io/teal.reporter/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"NEST. Author, maintainer.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"NEST (2022). teal.reporter: Reporting tools Shiny modules. https://github.com/insightsengineering/teal.reporter, https://insightsengineering.github.io/teal.reporter/.","code":"@Manual{,   title = {teal.reporter: Reporting tools for Shiny modules},   author = {{NEST}},   year = {2022},   note = {https://github.com/insightsengineering/teal.reporter, https://insightsengineering.github.io/teal.reporter/}, }"},{"path":[]},{"path":"https://insightsengineering.github.io/teal.reporter/pull_request_template.html","id":null,"dir":"","previous_headings":"","what":"Pull Request","title":"Pull Request","text":"Fixes #nnn","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ContentBlock.html","id":null,"dir":"Reference","previous_headings":"","what":"ContentBlock — ContentBlock","title":"ContentBlock — ContentBlock","text":"ContentBlock ContentBlock","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ContentBlock.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"ContentBlock — ContentBlock","text":"ContentBlock$new() ContentBlock$set_content() ContentBlock$get_content() ContentBlock$clone()","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ContentBlock.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"ContentBlock — ContentBlock","text":"Returns ContentBlock object.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ContentBlock.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ContentBlock — ContentBlock","text":"","code":"ContentBlock$new()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ContentBlock.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ContentBlock — ContentBlock","text":"Returns ContentBlock object content default style.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ContentBlock.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"ContentBlock — ContentBlock","text":"ContentBlock","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ContentBlock.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ContentBlock — ContentBlock","text":"","code":"block <- teal.reporter:::ContentBlock$new()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ContentBlock.html","id":"method-set-content-","dir":"Reference","previous_headings":"","what":"Method set_content()","title":"ContentBlock — ContentBlock","text":"Sets content ContentBlock.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ContentBlock.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"ContentBlock — ContentBlock","text":"","code":"ContentBlock$set_content(content)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ContentBlock.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ContentBlock — ContentBlock","text":"content (character(0) character(1)) string literal file path assigned ContentBlock","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ContentBlock.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"ContentBlock — ContentBlock","text":"invisibly self","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ContentBlock.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"ContentBlock — ContentBlock","text":"","code":"block <- teal.reporter:::ContentBlock$new() block$set_content(\"Base64 encoded picture\")"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ContentBlock.html","id":"method-get-content-","dir":"Reference","previous_headings":"","what":"Method get_content()","title":"ContentBlock — ContentBlock","text":"Returns absolute path content ContentBlock","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ContentBlock.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"ContentBlock — ContentBlock","text":"","code":"ContentBlock$get_content()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ContentBlock.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"ContentBlock — ContentBlock","text":"character content ContentBlock","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ContentBlock.html","id":"examples-2","dir":"Reference","previous_headings":"","what":"Examples","title":"ContentBlock — ContentBlock","text":"","code":"block <- teal.reporter:::ContentBlock$new() block$get_content()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ContentBlock.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"ContentBlock — ContentBlock","text":"objects class cloneable method.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ContentBlock.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"ContentBlock — ContentBlock","text":"","code":"ContentBlock$clone(deep = FALSE)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ContentBlock.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"ContentBlock — ContentBlock","text":"deep Whether make deep clone.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ContentBlock.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ContentBlock — ContentBlock","text":"","code":"## ------------------------------------------------ ## Method `ContentBlock$new` ## ------------------------------------------------  block <- teal.reporter:::ContentBlock$new()   ## ------------------------------------------------ ## Method `ContentBlock$set_content` ## ------------------------------------------------  block <- teal.reporter:::ContentBlock$new() block$set_content(\"Base64 encoded picture\")   ## ------------------------------------------------ ## Method `ContentBlock$get_content` ## ------------------------------------------------  block <- teal.reporter:::ContentBlock$new() block$get_content() #> character(0)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/NewpageBlock.html","id":null,"dir":"Reference","previous_headings":"","what":"NewpageBlock — NewpageBlock","title":"NewpageBlock — NewpageBlock","text":"NewpageBlock NewpageBlock","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/NewpageBlock.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"NewpageBlock — NewpageBlock","text":"teal.reporter::ContentBlock -> NewpageBlock","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/NewpageBlock.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"NewpageBlock — NewpageBlock","text":"teal.reporter::ContentBlock$get_content() teal.reporter::ContentBlock$set_content()","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/NewpageBlock.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"NewpageBlock — NewpageBlock","text":"NewpageBlock$new() NewpageBlock$clone()","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/NewpageBlock.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"NewpageBlock — NewpageBlock","text":"Returns NewpageBlock object.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/NewpageBlock.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NewpageBlock — NewpageBlock","text":"","code":"NewpageBlock$new()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/NewpageBlock.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"NewpageBlock — NewpageBlock","text":"Returns NewpageBlock object content default style.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/NewpageBlock.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"NewpageBlock — NewpageBlock","text":"NewpageBlock","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/NewpageBlock.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NewpageBlock — NewpageBlock","text":"","code":"block <- teal.reporter:::NewpageBlock$new()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/NewpageBlock.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"NewpageBlock — NewpageBlock","text":"objects class cloneable method.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/NewpageBlock.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"NewpageBlock — NewpageBlock","text":"","code":"NewpageBlock$clone(deep = FALSE)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/NewpageBlock.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NewpageBlock — NewpageBlock","text":"deep Whether make deep clone.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/NewpageBlock.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NewpageBlock — NewpageBlock","text":"","code":"## ------------------------------------------------ ## Method `NewpageBlock$new` ## ------------------------------------------------  block <- teal.reporter:::NewpageBlock$new()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":null,"dir":"Reference","previous_headings":"","what":"PictureBlock — PictureBlock","title":"PictureBlock — PictureBlock","text":"PictureBlock PictureBlock","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"PictureBlock — PictureBlock","text":"teal.reporter::ContentBlock -> PictureBlock","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"PictureBlock — PictureBlock","text":"teal.reporter::ContentBlock$get_content()","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"PictureBlock — PictureBlock","text":"PictureBlock$new() PictureBlock$set_content() PictureBlock$finalize() PictureBlock$set_title() PictureBlock$get_title() PictureBlock$set_dim() PictureBlock$get_dim() PictureBlock$clone()","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"PictureBlock — PictureBlock","text":"Returns new PictureBlock object.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PictureBlock — PictureBlock","text":"","code":"PictureBlock$new(plot)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PictureBlock — PictureBlock","text":"plot (ggplot, grid) picture PictureBlock","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"PictureBlock — PictureBlock","text":"PictureBlock object","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"method-set-content-","dir":"Reference","previous_headings":"","what":"Method set_content()","title":"PictureBlock — PictureBlock","text":"Sets content PictureBlock.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"PictureBlock — PictureBlock","text":"","code":"PictureBlock$set_content(content)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"PictureBlock — PictureBlock","text":"content (ggplot, grob, trellis) picture PictureBlock","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"PictureBlock — PictureBlock","text":"throws argument ggplot, grob trellis plot.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"PictureBlock — PictureBlock","text":"invisibly self","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PictureBlock — PictureBlock","text":"","code":"block <- teal.reporter:::PictureBlock$new() block$set_content(ggplot2::ggplot(iris))  block <- teal.reporter:::PictureBlock$new() block$set_content(lattice::bwplot(1))  block <- teal.reporter:::PictureBlock$new() block$set_content(ggplot2::ggplotGrob(ggplot2::ggplot(iris)))"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"method-finalize-","dir":"Reference","previous_headings":"","what":"Method finalize()","title":"PictureBlock — PictureBlock","text":"Finalizes PictureBlock.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"PictureBlock — PictureBlock","text":"","code":"PictureBlock$finalize()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"details-1","dir":"Reference","previous_headings":"","what":"Details","title":"PictureBlock — PictureBlock","text":"Removes temporary file created constructor.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"method-set-title-","dir":"Reference","previous_headings":"","what":"Method set_title()","title":"PictureBlock — PictureBlock","text":"Sets title PictureBlock.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"PictureBlock — PictureBlock","text":"","code":"PictureBlock$set_title(title)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"PictureBlock — PictureBlock","text":"title (character(1)) string assigned PictureBlock","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"details-2","dir":"Reference","previous_headings":"","what":"Details","title":"PictureBlock — PictureBlock","text":"throws argument character(1).","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"PictureBlock — PictureBlock","text":"invisibly self","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"PictureBlock — PictureBlock","text":"","code":"block <- teal.reporter:::PictureBlock$new() block$set_title(\"Title\")"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"method-get-title-","dir":"Reference","previous_headings":"","what":"Method get_title()","title":"PictureBlock — PictureBlock","text":"Returns title PictureBlock","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"PictureBlock — PictureBlock","text":"","code":"PictureBlock$get_title()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"PictureBlock — PictureBlock","text":"content PictureBlock","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"examples-2","dir":"Reference","previous_headings":"","what":"Examples","title":"PictureBlock — PictureBlock","text":"","code":"block <- teal.reporter:::PictureBlock$new() block$get_title()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"method-set-dim-","dir":"Reference","previous_headings":"","what":"Method set_dim()","title":"PictureBlock — PictureBlock","text":"Sets dimensions PictureBlock","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"PictureBlock — PictureBlock","text":"","code":"PictureBlock$set_dim(dim)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"PictureBlock — PictureBlock","text":"dim numeric figure dimensions (width height) pixels, length 2.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"PictureBlock — PictureBlock","text":"self","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"examples-3","dir":"Reference","previous_headings":"","what":"Examples","title":"PictureBlock — PictureBlock","text":"","code":"block <- teal.reporter:::PictureBlock$new() block$set_dim(c(800, 600))"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"method-get-dim-","dir":"Reference","previous_headings":"","what":"Method get_dim()","title":"PictureBlock — PictureBlock","text":"Returns dimensions PictureBlock","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"PictureBlock — PictureBlock","text":"","code":"PictureBlock$get_dim()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"PictureBlock — PictureBlock","text":"numeric array 2 numeric values representing width height pixels.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"examples-4","dir":"Reference","previous_headings":"","what":"Examples","title":"PictureBlock — PictureBlock","text":"","code":"block <- teal.reporter:::PictureBlock$new() block$get_dim()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"PictureBlock — PictureBlock","text":"objects class cloneable method.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"PictureBlock — PictureBlock","text":"","code":"PictureBlock$clone(deep = FALSE)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"PictureBlock — PictureBlock","text":"deep Whether make deep clone.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PictureBlock — PictureBlock","text":"","code":"## ------------------------------------------------ ## Method `PictureBlock$set_content` ## ------------------------------------------------  block <- teal.reporter:::PictureBlock$new() block$set_content(ggplot2::ggplot(iris))  block <- teal.reporter:::PictureBlock$new() block$set_content(lattice::bwplot(1))  block <- teal.reporter:::PictureBlock$new() block$set_content(ggplot2::ggplotGrob(ggplot2::ggplot(iris)))  ## ------------------------------------------------ ## Method `PictureBlock$set_title` ## ------------------------------------------------  block <- teal.reporter:::PictureBlock$new() block$set_title(\"Title\")   ## ------------------------------------------------ ## Method `PictureBlock$get_title` ## ------------------------------------------------  block <- teal.reporter:::PictureBlock$new() block$get_title() #> [1] \"\"   ## ------------------------------------------------ ## Method `PictureBlock$set_dim` ## ------------------------------------------------  block <- teal.reporter:::PictureBlock$new() block$set_dim(c(800, 600))   ## ------------------------------------------------ ## Method `PictureBlock$get_dim` ## ------------------------------------------------  block <- teal.reporter:::PictureBlock$new() block$get_dim() #> [1] 800 600"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Renderer.html","id":null,"dir":"Reference","previous_headings":"","what":"Renderer — Renderer","title":"Renderer — Renderer","text":"Renderer Renderer","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Renderer.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Renderer — Renderer","text":"Renderer$new() Renderer$finalize() Renderer$renderRmd() Renderer$render() Renderer$get_output_dir() Renderer$clone()","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Renderer.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Renderer — Renderer","text":"Returns Renderer object.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Renderer.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Renderer — Renderer","text":"","code":"Renderer$new()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Renderer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Renderer — Renderer","text":"Returns Renderer object.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Renderer.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Renderer — Renderer","text":"Renderer object.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Renderer.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Renderer — Renderer","text":"","code":"renderer <- teal.reporter:::Renderer$new()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Renderer.html","id":"method-finalize-","dir":"Reference","previous_headings":"","what":"Method finalize()","title":"Renderer — Renderer","text":"Finalizes Renderer object.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Renderer.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Renderer — Renderer","text":"","code":"Renderer$finalize()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Renderer.html","id":"method-renderrmd-","dir":"Reference","previous_headings":"","what":"Method renderRmd()","title":"Renderer — Renderer","text":"getting Rmd text easily rendered later.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Renderer.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Renderer — Renderer","text":"","code":"Renderer$renderRmd(blocks, yaml_header)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Renderer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Renderer — Renderer","text":"blocks list c(\"TextBlock\", \"PictureBlock\", \"NewpageBlock\") objects. yaml_header character rmarkdown yaml header.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Renderer.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Renderer — Renderer","text":"character Rmd text (yaml header + body), ready rendered.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Renderer.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"Renderer — Renderer","text":"","code":"card1 <- teal.reporter:::ReportCard$new()  card1$append_text(\"Header 2 text\", \"header2\") card1$append_text(\"A paragraph of default text\") card1$append_plot(  ggplot2::ggplot(iris, ggplot2::aes(x = Petal.Length)) + ggplot2::geom_histogram() )  card2 <- teal.reporter:::ReportCard$new()  card2$append_text(\"Header 2 text\", \"header2\") card2$append_text(\"A paragraph of default text\", \"header2\") lyt <- rtables::analyze(rtables::split_rows_by(rtables::basic_table(), \"Day\"), \"Ozone\", afun = mean) table_res2 <- rtables::build_table(lyt, airquality) card2$append_table(table_res2) card2$append_table(iris)  reporter <- teal.reporter:::Reporter$new() reporter$append_cards(list(card1, card2))  yaml_l <- list(   author = teal.reporter:::yaml_quoted(\"NEST\"),   title = teal.reporter:::yaml_quoted(\"Report\"),   date = teal.reporter:::yaml_quoted(\"07/04/2019\"),   output = list(html_document = list(toc = FALSE)) )  yaml_header <- teal.reporter:::md_header(yaml::as.yaml(yaml_l)) result_path <- teal.reporter:::Renderer$new()$renderRmd(reporter$get_blocks(), yaml_header)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Renderer.html","id":"method-render-","dir":"Reference","previous_headings":"","what":"Method render()","title":"Renderer — Renderer","text":"Renders content Report output file","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Renderer.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Renderer — Renderer","text":"","code":"Renderer$render(blocks, yaml_header, ...)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Renderer.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Renderer — Renderer","text":"blocks list c(\"TextBlock\", \"PictureBlock\", \"NewpageBlock\") objects. yaml_header character rmarkdown yaml header. ... rmarkdown::render arguments, input output_dir updated.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Renderer.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Renderer — Renderer","text":"character path output","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Renderer.html","id":"examples-2","dir":"Reference","previous_headings":"","what":"Examples","title":"Renderer — Renderer","text":"","code":"card1 <- teal.reporter:::ReportCard$new() card1$append_text(\"Header 2 text\", \"header2\") card1$append_text(\"A paragraph of default text\") card1$append_plot(  ggplot2::ggplot(iris, ggplot2::aes(x = Petal.Length)) + ggplot2::geom_histogram() )  card2 <- teal.reporter:::ReportCard$new() card2$append_text(\"Header 2 text\", \"header2\") card2$append_text(\"A paragraph of default text\", \"header2\") lyt <- rtables::analyze(rtables::split_rows_by(rtables::basic_table(), \"Day\"), \"Ozone\", afun = mean) table_res2 <- rtables::build_table(lyt, airquality) card2$append_table(table_res2) card2$append_table(iris)  reporter <- teal.reporter:::Reporter$new() reporter$append_cards(list(card1, card2))  yaml_l <- list(   author = teal.reporter:::yaml_quoted(\"NEST\"),   title = teal.reporter:::yaml_quoted(\"Report\"),   date = teal.reporter:::yaml_quoted(\"07/04/2019\"),   output = list(html_document = list(toc = FALSE)) )  yaml_header <- teal.reporter:::md_header(yaml::as.yaml(yaml_l)) result_path <- teal.reporter:::Renderer$new()$render(reporter$get_blocks(), yaml_header)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Renderer.html","id":"method-get-output-dir-","dir":"Reference","previous_headings":"","what":"Method get_output_dir()","title":"Renderer — Renderer","text":"get output_dir field","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Renderer.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Renderer — Renderer","text":"","code":"Renderer$get_output_dir()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Renderer.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Renderer — Renderer","text":"character output_dir field path.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Renderer.html","id":"examples-3","dir":"Reference","previous_headings":"","what":"Examples","title":"Renderer — Renderer","text":"","code":"renderer <- teal.reporter:::Renderer$new() renderer$get_output_dir()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Renderer.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Renderer — Renderer","text":"objects class cloneable method.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Renderer.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Renderer — Renderer","text":"","code":"Renderer$clone(deep = FALSE)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Renderer.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Renderer — Renderer","text":"deep Whether make deep clone.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Renderer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Renderer — Renderer","text":"","code":"## ------------------------------------------------ ## Method `Renderer$new` ## ------------------------------------------------  renderer <- teal.reporter:::Renderer$new()  ## ------------------------------------------------ ## Method `Renderer$renderRmd` ## ------------------------------------------------  card1 <- teal.reporter:::ReportCard$new()  card1$append_text(\"Header 2 text\", \"header2\") card1$append_text(\"A paragraph of default text\") card1$append_plot(  ggplot2::ggplot(iris, ggplot2::aes(x = Petal.Length)) + ggplot2::geom_histogram() ) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.  card2 <- teal.reporter:::ReportCard$new()  card2$append_text(\"Header 2 text\", \"header2\") card2$append_text(\"A paragraph of default text\", \"header2\") lyt <- rtables::analyze(rtables::split_rows_by(rtables::basic_table(), \"Day\"), \"Ozone\", afun = mean) table_res2 <- rtables::build_table(lyt, airquality) #> Split var [Day] was not character or factor. Converting to factor card2$append_table(table_res2) card2$append_table(iris)  reporter <- teal.reporter:::Reporter$new() reporter$append_cards(list(card1, card2))  yaml_l <- list(   author = teal.reporter:::yaml_quoted(\"NEST\"),   title = teal.reporter:::yaml_quoted(\"Report\"),   date = teal.reporter:::yaml_quoted(\"07/04/2019\"),   output = list(html_document = list(toc = FALSE)) )  yaml_header <- teal.reporter:::md_header(yaml::as.yaml(yaml_l)) result_path <- teal.reporter:::Renderer$new()$renderRmd(reporter$get_blocks(), yaml_header)  ## ------------------------------------------------ ## Method `Renderer$render` ## ------------------------------------------------  card1 <- teal.reporter:::ReportCard$new() card1$append_text(\"Header 2 text\", \"header2\") card1$append_text(\"A paragraph of default text\") card1$append_plot(  ggplot2::ggplot(iris, ggplot2::aes(x = Petal.Length)) + ggplot2::geom_histogram() ) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.  card2 <- teal.reporter:::ReportCard$new() card2$append_text(\"Header 2 text\", \"header2\") card2$append_text(\"A paragraph of default text\", \"header2\") lyt <- rtables::analyze(rtables::split_rows_by(rtables::basic_table(), \"Day\"), \"Ozone\", afun = mean) table_res2 <- rtables::build_table(lyt, airquality) #> Split var [Day] was not character or factor. Converting to factor card2$append_table(table_res2) card2$append_table(iris)  reporter <- teal.reporter:::Reporter$new() reporter$append_cards(list(card1, card2))  yaml_l <- list(   author = teal.reporter:::yaml_quoted(\"NEST\"),   title = teal.reporter:::yaml_quoted(\"Report\"),   date = teal.reporter:::yaml_quoted(\"07/04/2019\"),   output = list(html_document = list(toc = FALSE)) )  yaml_header <- teal.reporter:::md_header(yaml::as.yaml(yaml_l)) result_path <- teal.reporter:::Renderer$new()$render(reporter$get_blocks(), yaml_header)  ## ------------------------------------------------ ## Method `Renderer$get_output_dir` ## ------------------------------------------------  renderer <- teal.reporter:::Renderer$new() renderer$get_output_dir() #> [1] \"/tmp/RtmpIaChTA/report_202205101219317915\""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":null,"dir":"Reference","previous_headings":"","what":"ReportCard — ReportCard","title":"ReportCard — ReportCard","text":"R6 class supports creating report card containing text, plot, table meta data blocks can appended rendered form report output shiny app.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"ReportCard — ReportCard","text":"ReportCard$new() ReportCard$append_table() ReportCard$append_plot() ReportCard$append_text() ReportCard$get_content() ReportCard$append_metadata() ReportCard$get_chr_converters() ReportCard$clone()","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"ReportCard — ReportCard","text":"Returns ReportCard object.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ReportCard — ReportCard","text":"","code":"ReportCard$new()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"ReportCard — ReportCard","text":"ReportCard object","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ReportCard — ReportCard","text":"","code":"card <- ReportCard$new()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"method-append-table-","dir":"Reference","previous_headings":"","what":"Method append_table()","title":"ReportCard — ReportCard","text":"Appends table ReportCard.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"ReportCard — ReportCard","text":"","code":"ReportCard$append_table(table)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ReportCard — ReportCard","text":"table appended table","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"ReportCard — ReportCard","text":"invisibly self","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"ReportCard — ReportCard","text":"","code":"card <- ReportCard$new()$append_table(iris)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"method-append-plot-","dir":"Reference","previous_headings":"","what":"Method append_plot()","title":"ReportCard — ReportCard","text":"Appends plot ReportCard.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"ReportCard — ReportCard","text":"","code":"ReportCard$append_plot(plot)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"ReportCard — ReportCard","text":"plot appended plot","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"ReportCard — ReportCard","text":"invisibly self","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"examples-2","dir":"Reference","previous_headings":"","what":"Examples","title":"ReportCard — ReportCard","text":"","code":"card <- ReportCard$new()$append_plot(   ggplot2::ggplot(iris, ggplot2::aes(x = Petal.Length)) + ggplot2::geom_histogram() )"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"method-append-text-","dir":"Reference","previous_headings":"","what":"Method append_text()","title":"ReportCard — ReportCard","text":"Appends paragraph text ReportCard.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"ReportCard — ReportCard","text":"","code":"ReportCard$append_text(text, style = TextBlock$new()$get_available_styles()[1])"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"ReportCard — ReportCard","text":"text (character(0) character(1)) text style (character(1)) style paragraph. One : default, header, verbatim","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"ReportCard — ReportCard","text":"invisibly self","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"examples-3","dir":"Reference","previous_headings":"","what":"Examples","title":"ReportCard — ReportCard","text":"","code":"card <- ReportCard$new()$append_text(\"A paragraph of default text\")"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"method-get-content-","dir":"Reference","previous_headings":"","what":"Method get_content()","title":"ReportCard — ReportCard","text":"Returns content ReportCard.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"ReportCard — ReportCard","text":"","code":"ReportCard$get_content(raw = FALSE)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"ReportCard — ReportCard","text":"raw (logical) whether include content appended apply chr_converter functions meta data objects.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"ReportCard — ReportCard","text":"list() list TableBlock, TextBlock PictureBlock. raw argument TRUE, meta data objects form added returned. Otherwise, given chr_converter function given applied objects. metadata elements named.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"examples-4","dir":"Reference","previous_headings":"","what":"Examples","title":"ReportCard — ReportCard","text":"","code":"card <- ReportCard$new()$append_text(\"Some text\")$append_plot(   ggplot2::ggplot(iris, ggplot2::aes(x = Petal.Length)) + ggplot2::geom_histogram() )$append_metadata(\"rc\", \"a <- 2 + 2\")  card$get_content()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"method-append-metadata-","dir":"Reference","previous_headings":"","what":"Method append_metadata()","title":"ReportCard — ReportCard","text":"Appends content elements ReportCard.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"ReportCard — ReportCard","text":"","code":"ReportCard$append_metadata(key, value, chr_converter = deparse1)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"ReportCard — ReportCard","text":"key (character(1)) name meta data. value value meta data. chr_converter (function) convert value character, default base::deparse1.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"ReportCard — ReportCard","text":"invisibly self","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"examples-5","dir":"Reference","previous_headings":"","what":"Examples","title":"ReportCard — ReportCard","text":"","code":"custom_lm_chr_converter <- function(x) paste(capture.output(summary(x)), collapse = \"\\\\n  \") card <- ReportCard$new()$append_text(\"Some text\")$append_plot(   ggplot2::ggplot(iris, ggplot2::aes(x = Petal.Length)) + ggplot2::geom_histogram() )$append_text(\"Some text\")$append_metadata(key = \"lm\",                   value = lm(Ozone ~ Solar.R, airquality),                   chr_converter = custom_lm_chr_converter) card$get_content() card$get_content(raw = TRUE)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"method-get-chr-converters-","dir":"Reference","previous_headings":"","what":"Method get_chr_converters()","title":"ReportCard — ReportCard","text":"get chr_converter functions ReportCard.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"ReportCard — ReportCard","text":"","code":"ReportCard$get_chr_converters()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"ReportCard — ReportCard","text":"named list","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"examples-6","dir":"Reference","previous_headings":"","what":"Examples","title":"ReportCard — ReportCard","text":"","code":"custom_lm_chr_converter <- function(x) paste(capture.output(summary(x)), collapse = \"\\\\n  \") card <- ReportCard$new()$append_text(\"Some text\")$append_plot(   ggplot2::ggplot(iris, ggplot2::aes(x = Petal.Length)) + ggplot2::geom_histogram() )$append_text(\"Some text\")$append_metadata(key = \"lm\",                   value = lm(Ozone ~ Solar.R, airquality),                   chr_converter = custom_lm_chr_converter )$append_metadata(key = \"code\", value = lm(Ozone ~ Solar.R, airquality)) card$get_chr_converters()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"ReportCard — ReportCard","text":"objects class cloneable method.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"ReportCard — ReportCard","text":"","code":"ReportCard$clone(deep = FALSE)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"ReportCard — ReportCard","text":"deep Whether make deep clone.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ReportCard — ReportCard","text":"","code":"## ------------------------------------------------ ## Method `ReportCard$new` ## ------------------------------------------------  card <- ReportCard$new()   ## ------------------------------------------------ ## Method `ReportCard$append_table` ## ------------------------------------------------  card <- ReportCard$new()$append_table(iris)   ## ------------------------------------------------ ## Method `ReportCard$append_plot` ## ------------------------------------------------  card <- ReportCard$new()$append_plot(   ggplot2::ggplot(iris, ggplot2::aes(x = Petal.Length)) + ggplot2::geom_histogram() ) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.   ## ------------------------------------------------ ## Method `ReportCard$append_text` ## ------------------------------------------------  card <- ReportCard$new()$append_text(\"A paragraph of default text\")   ## ------------------------------------------------ ## Method `ReportCard$get_content` ## ------------------------------------------------  card <- ReportCard$new()$append_text(\"Some text\")$append_plot(   ggplot2::ggplot(iris, ggplot2::aes(x = Petal.Length)) + ggplot2::geom_histogram() )$append_metadata(\"rc\", \"a <- 2 + 2\") #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.  card$get_content() #> [[1]] #> <TextBlock> #>   Inherits from: <ContentBlock> #>   Public: #>     clone: function (deep = FALSE)  #>     get_available_styles: function ()  #>     get_content: function ()  #>     get_style: function ()  #>     initialize: function (content = character(0), style = private$styles[1])  #>     set_content: function (content)  #>     set_style: function (style)  #>   Private: #>     content: Some text #>     deep_clone: function (name, value)  #>     style: default #>     styles: default header2 header3 verbatim #>  #> [[2]] #> <PictureBlock> #>   Inherits from: <ContentBlock> #>   Public: #>     clone: function (deep = FALSE)  #>     finalize: function ()  #>     get_content: function ()  #>     get_dim: function ()  #>     get_title: function ()  #>     initialize: function (plot)  #>     set_content: function (content)  #>     set_dim: function (dim)  #>     set_title: function (title)  #>   Private: #>     content: /tmp/RtmpIaChTA/file10e78043e14.png #>     deep_clone: function (name, value)  #>     dim: 800 600 #>     supported_plots: ggplot grob trellis #>     title:  #>     type:  #>  #> [[3]] #> <TextBlock> #>   Inherits from: <ContentBlock> #>   Public: #>     clone: function (deep = FALSE)  #>     get_available_styles: function ()  #>     get_content: function ()  #>     get_style: function ()  #>     initialize: function (content = character(0), style = private$styles[1])  #>     set_content: function (content)  #>     set_style: function (style)  #>   Private: #>     content: \"a <- 2 + 2\" #>     deep_clone: function (name, value)  #>     style: default #>     styles: default header2 header3 verbatim #>    ## ------------------------------------------------ ## Method `ReportCard$append_metadata` ## ------------------------------------------------  custom_lm_chr_converter <- function(x) paste(capture.output(summary(x)), collapse = \"\\\\n  \") card <- ReportCard$new()$append_text(\"Some text\")$append_plot(   ggplot2::ggplot(iris, ggplot2::aes(x = Petal.Length)) + ggplot2::geom_histogram() )$append_text(\"Some text\")$append_metadata(key = \"lm\",                   value = lm(Ozone ~ Solar.R, airquality),                   chr_converter = custom_lm_chr_converter) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. card$get_content() #> [[1]] #> <TextBlock> #>   Inherits from: <ContentBlock> #>   Public: #>     clone: function (deep = FALSE)  #>     get_available_styles: function ()  #>     get_content: function ()  #>     get_style: function ()  #>     initialize: function (content = character(0), style = private$styles[1])  #>     set_content: function (content)  #>     set_style: function (style)  #>   Private: #>     content: Some text #>     deep_clone: function (name, value)  #>     style: default #>     styles: default header2 header3 verbatim #>  #> [[2]] #> <PictureBlock> #>   Inherits from: <ContentBlock> #>   Public: #>     clone: function (deep = FALSE)  #>     finalize: function ()  #>     get_content: function ()  #>     get_dim: function ()  #>     get_title: function ()  #>     initialize: function (plot)  #>     set_content: function (content)  #>     set_dim: function (dim)  #>     set_title: function (title)  #>   Private: #>     content: /tmp/RtmpIaChTA/file10e3fb892ed.png #>     deep_clone: function (name, value)  #>     dim: 800 600 #>     supported_plots: ggplot grob trellis #>     title:  #>     type:  #>  #> [[3]] #> <TextBlock> #>   Inherits from: <ContentBlock> #>   Public: #>     clone: function (deep = FALSE)  #>     get_available_styles: function ()  #>     get_content: function ()  #>     get_style: function ()  #>     initialize: function (content = character(0), style = private$styles[1])  #>     set_content: function (content)  #>     set_style: function (style)  #>   Private: #>     content: Some text #>     deep_clone: function (name, value)  #>     style: default #>     styles: default header2 header3 verbatim #>  #> [[4]] #> <TextBlock> #>   Inherits from: <ContentBlock> #>   Public: #>     clone: function (deep = FALSE)  #>     get_available_styles: function ()  #>     get_content: function ()  #>     get_style: function ()  #>     initialize: function (content = character(0), style = private$styles[1])  #>     set_content: function (content)  #>     set_style: function (style)  #>   Private: #>     content: \\n  Call:\\n  lm(formula = Ozone ~ Solar.R, data = airqua ... #>     deep_clone: function (name, value)  #>     style: default #>     styles: default header2 header3 verbatim #>  card$get_content(raw = TRUE) #> [[1]] #> <TextBlock> #>   Inherits from: <ContentBlock> #>   Public: #>     clone: function (deep = FALSE)  #>     get_available_styles: function ()  #>     get_content: function ()  #>     get_style: function ()  #>     initialize: function (content = character(0), style = private$styles[1])  #>     set_content: function (content)  #>     set_style: function (style)  #>   Private: #>     content: Some text #>     deep_clone: function (name, value)  #>     style: default #>     styles: default header2 header3 verbatim #>  #> [[2]] #> <PictureBlock> #>   Inherits from: <ContentBlock> #>   Public: #>     clone: function (deep = FALSE)  #>     finalize: function ()  #>     get_content: function ()  #>     get_dim: function ()  #>     get_title: function ()  #>     initialize: function (plot)  #>     set_content: function (content)  #>     set_dim: function (dim)  #>     set_title: function (title)  #>   Private: #>     content: /tmp/RtmpIaChTA/file10e3fb892ed.png #>     deep_clone: function (name, value)  #>     dim: 800 600 #>     supported_plots: ggplot grob trellis #>     title:  #>     type:  #>  #> [[3]] #> <TextBlock> #>   Inherits from: <ContentBlock> #>   Public: #>     clone: function (deep = FALSE)  #>     get_available_styles: function ()  #>     get_content: function ()  #>     get_style: function ()  #>     initialize: function (content = character(0), style = private$styles[1])  #>     set_content: function (content)  #>     set_style: function (style)  #>   Private: #>     content: Some text #>     deep_clone: function (name, value)  #>     style: default #>     styles: default header2 header3 verbatim #>  #> $lm #>  #> Call: #> lm(formula = Ozone ~ Solar.R, data = airquality) #>  #> Coefficients: #> (Intercept)      Solar.R   #>     18.5987       0.1272   #>  #>    ## ------------------------------------------------ ## Method `ReportCard$get_chr_converters` ## ------------------------------------------------  custom_lm_chr_converter <- function(x) paste(capture.output(summary(x)), collapse = \"\\\\n  \") card <- ReportCard$new()$append_text(\"Some text\")$append_plot(   ggplot2::ggplot(iris, ggplot2::aes(x = Petal.Length)) + ggplot2::geom_histogram() )$append_text(\"Some text\")$append_metadata(key = \"lm\",                   value = lm(Ozone ~ Solar.R, airquality),                   chr_converter = custom_lm_chr_converter )$append_metadata(key = \"code\", value = lm(Ozone ~ Solar.R, airquality)) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. card$get_chr_converters() #> $lm #> function(x) paste(capture.output(summary(x)), collapse = \"\\\\n  \") #> <environment: 0x55947b8004b0> #>  #> $code #> function (expr, collapse = \" \", width.cutoff = 500L, ...)  #> paste(deparse(expr, width.cutoff, ...), collapse = collapse) #> <bytecode: 0x559476d9a570> #> <environment: namespace:base> #>"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":null,"dir":"Reference","previous_headings":"","what":"Reporter — Reporter","title":"Reporter — Reporter","text":"Reporter Reporter","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Reporter — Reporter","text":"Reporter$new() Reporter$append_cards() Reporter$get_cards() Reporter$get_blocks() Reporter$reset() Reporter$clone()","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Reporter — Reporter","text":"Returns Reporter object.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reporter — Reporter","text":"","code":"Reporter$new()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Reporter — Reporter","text":"Reporter object","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reporter — Reporter","text":"","code":"reporter <- teal.reporter:::Reporter$new()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"method-append-cards-","dir":"Reference","previous_headings":"","what":"Method append_cards()","title":"Reporter — Reporter","text":"Appends table Reporter.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Reporter — Reporter","text":"","code":"Reporter$append_cards(cards)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reporter — Reporter","text":"cards ReportCard list objects","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Reporter — Reporter","text":"invisibly self","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"Reporter — Reporter","text":"","code":"card1 <- teal.reporter:::ReportCard$new()  card1$append_text(\"Header 2 text\", \"header2\") card1$append_text(\"A paragraph of default text\", \"header2\") card1$append_plot(  ggplot2::ggplot(iris, ggplot2::aes(x = Petal.Length)) + ggplot2::geom_histogram() )  card2 <- teal.reporter:::ReportCard$new()  card2$append_text(\"Header 2 text\", \"header2\") card2$append_text(\"A paragraph of default text\", \"header2\") lyt <- rtables::analyze(rtables::split_rows_by(rtables::basic_table(), \"Day\"), \"Ozone\", afun = mean) table_res2 <- rtables::build_table(lyt, airquality) card2$append_table(table_res2) card2$append_table(iris)  reporter <- teal.reporter:::Reporter$new() reporter$append_cards(list(card1, card2))"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"method-get-cards-","dir":"Reference","previous_headings":"","what":"Method get_cards()","title":"Reporter — Reporter","text":"Returns cards Reporter.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Reporter — Reporter","text":"","code":"Reporter$get_cards()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Reporter — Reporter","text":"list() list ReportCard","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"examples-2","dir":"Reference","previous_headings":"","what":"Examples","title":"Reporter — Reporter","text":"","code":"card1 <- teal.reporter:::ReportCard$new()  card1$append_text(\"Header 2 text\", \"header2\") card1$append_text(\"A paragraph of default text\", \"header2\") card1$append_plot(  ggplot2::ggplot(iris, ggplot2::aes(x = Petal.Length)) + ggplot2::geom_histogram() )  card2 <- teal.reporter:::ReportCard$new()  card2$append_text(\"Header 2 text\", \"header2\") card2$append_text(\"A paragraph of default text\", \"header2\") lyt <- rtables::analyze(rtables::split_rows_by(rtables::basic_table(), \"Day\"), \"Ozone\", afun = mean) table_res2 <- rtables::build_table(lyt, airquality) card2$append_table(table_res2) card2$append_table(iris)  reporter <- teal.reporter:::Reporter$new() reporter$append_cards(list(card1, card2)) reporter$get_cards()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"method-get-blocks-","dir":"Reference","previous_headings":"","what":"Method get_blocks()","title":"Reporter — Reporter","text":"Returns blocks ReportCard Reporter.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Reporter — Reporter","text":"","code":"Reporter$get_blocks(sep = NewpageBlock$new())"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reporter — Reporter","text":"sep element inserted content element Reporter. Pass NULL return content without additional elements. Default: NewpageBlock$new()","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Reporter — Reporter","text":"list() list TableBlock, TextBlock, PictureBlock NewpageBlock","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"examples-3","dir":"Reference","previous_headings":"","what":"Examples","title":"Reporter — Reporter","text":"","code":"card1 <- teal.reporter:::ReportCard$new()  card1$append_text(\"Header 2 text\", \"header2\") card1$append_text(\"A paragraph of default text\", \"header2\") card1$append_plot(  ggplot2::ggplot(iris, ggplot2::aes(x = Petal.Length)) + ggplot2::geom_histogram() )  card2 <- teal.reporter:::ReportCard$new()  card2$append_text(\"Header 2 text\", \"header2\") card2$append_text(\"A paragraph of default text\", \"header2\") lyt <- rtables::analyze(rtables::split_rows_by(rtables::basic_table(), \"Day\"), \"Ozone\", afun = mean) table_res2 <- rtables::build_table(lyt, airquality) card2$append_table(table_res2) card2$append_table(iris)  reporter <- teal.reporter:::Reporter$new() reporter$append_cards(list(card1, card2)) reporter$get_blocks()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"method-reset-","dir":"Reference","previous_headings":"","what":"Method reset()","title":"Reporter — Reporter","text":"Removes ReportCard objects added Reporter.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Reporter — Reporter","text":"","code":"Reporter$reset()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Reporter — Reporter","text":"invisibly self","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Reporter — Reporter","text":"objects class cloneable method.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Reporter — Reporter","text":"","code":"Reporter$clone(deep = FALSE)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reporter — Reporter","text":"deep Whether make deep clone.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reporter — Reporter","text":"","code":"## ------------------------------------------------ ## Method `Reporter$new` ## ------------------------------------------------  reporter <- teal.reporter:::Reporter$new()   ## ------------------------------------------------ ## Method `Reporter$append_cards` ## ------------------------------------------------  card1 <- teal.reporter:::ReportCard$new()  card1$append_text(\"Header 2 text\", \"header2\") card1$append_text(\"A paragraph of default text\", \"header2\") card1$append_plot(  ggplot2::ggplot(iris, ggplot2::aes(x = Petal.Length)) + ggplot2::geom_histogram() ) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.  card2 <- teal.reporter:::ReportCard$new()  card2$append_text(\"Header 2 text\", \"header2\") card2$append_text(\"A paragraph of default text\", \"header2\") lyt <- rtables::analyze(rtables::split_rows_by(rtables::basic_table(), \"Day\"), \"Ozone\", afun = mean) table_res2 <- rtables::build_table(lyt, airquality) #> Split var [Day] was not character or factor. Converting to factor card2$append_table(table_res2) card2$append_table(iris)  reporter <- teal.reporter:::Reporter$new() reporter$append_cards(list(card1, card2))   ## ------------------------------------------------ ## Method `Reporter$get_cards` ## ------------------------------------------------  card1 <- teal.reporter:::ReportCard$new()  card1$append_text(\"Header 2 text\", \"header2\") card1$append_text(\"A paragraph of default text\", \"header2\") card1$append_plot(  ggplot2::ggplot(iris, ggplot2::aes(x = Petal.Length)) + ggplot2::geom_histogram() ) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.  card2 <- teal.reporter:::ReportCard$new()  card2$append_text(\"Header 2 text\", \"header2\") card2$append_text(\"A paragraph of default text\", \"header2\") lyt <- rtables::analyze(rtables::split_rows_by(rtables::basic_table(), \"Day\"), \"Ozone\", afun = mean) table_res2 <- rtables::build_table(lyt, airquality) #> Split var [Day] was not character or factor. Converting to factor card2$append_table(table_res2) card2$append_table(iris)  reporter <- teal.reporter:::Reporter$new() reporter$append_cards(list(card1, card2)) reporter$get_cards() #> [[1]] #> <ReportCard> #>   Public: #>     append_metadata: function (key, value, chr_converter = deparse1)  #>     append_plot: function (plot)  #>     append_table: function (table)  #>     append_text: function (text, style = TextBlock$new()$get_available_styles()[1])  #>     clone: function (deep = FALSE)  #>     get_chr_converters: function ()  #>     get_content: function (raw = FALSE)  #>     initialize: function ()  #>   Private: #>     chr_converters: list #>     content: list #>     deep_clone: function (name, value)  #>  #> [[2]] #> <ReportCard> #>   Public: #>     append_metadata: function (key, value, chr_converter = deparse1)  #>     append_plot: function (plot)  #>     append_table: function (table)  #>     append_text: function (text, style = TextBlock$new()$get_available_styles()[1])  #>     clone: function (deep = FALSE)  #>     get_chr_converters: function ()  #>     get_content: function (raw = FALSE)  #>     initialize: function ()  #>   Private: #>     chr_converters: list #>     content: list #>     deep_clone: function (name, value)  #>   ## ------------------------------------------------ ## Method `Reporter$get_blocks` ## ------------------------------------------------  card1 <- teal.reporter:::ReportCard$new()  card1$append_text(\"Header 2 text\", \"header2\") card1$append_text(\"A paragraph of default text\", \"header2\") card1$append_plot(  ggplot2::ggplot(iris, ggplot2::aes(x = Petal.Length)) + ggplot2::geom_histogram() ) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.  card2 <- teal.reporter:::ReportCard$new()  card2$append_text(\"Header 2 text\", \"header2\") card2$append_text(\"A paragraph of default text\", \"header2\") lyt <- rtables::analyze(rtables::split_rows_by(rtables::basic_table(), \"Day\"), \"Ozone\", afun = mean) table_res2 <- rtables::build_table(lyt, airquality) #> Split var [Day] was not character or factor. Converting to factor card2$append_table(table_res2) card2$append_table(iris)  reporter <- teal.reporter:::Reporter$new() reporter$append_cards(list(card1, card2)) reporter$get_blocks() #> [[1]] #> <TextBlock> #>   Inherits from: <ContentBlock> #>   Public: #>     clone: function (deep = FALSE)  #>     get_available_styles: function ()  #>     get_content: function ()  #>     get_style: function ()  #>     initialize: function (content = character(0), style = private$styles[1])  #>     set_content: function (content)  #>     set_style: function (style)  #>   Private: #>     content: Header 2 text #>     deep_clone: function (name, value)  #>     style: header2 #>     styles: default header2 header3 verbatim #>  #> [[2]] #> <TextBlock> #>   Inherits from: <ContentBlock> #>   Public: #>     clone: function (deep = FALSE)  #>     get_available_styles: function ()  #>     get_content: function ()  #>     get_style: function ()  #>     initialize: function (content = character(0), style = private$styles[1])  #>     set_content: function (content)  #>     set_style: function (style)  #>   Private: #>     content: A paragraph of default text #>     deep_clone: function (name, value)  #>     style: header2 #>     styles: default header2 header3 verbatim #>  #> [[3]] #> <PictureBlock> #>   Inherits from: <ContentBlock> #>   Public: #>     clone: function (deep = FALSE)  #>     finalize: function ()  #>     get_content: function ()  #>     get_dim: function ()  #>     get_title: function ()  #>     initialize: function (plot)  #>     set_content: function (content)  #>     set_dim: function (dim)  #>     set_title: function (title)  #>   Private: #>     content: /tmp/RtmpIaChTA/file10e20327225.png #>     deep_clone: function (name, value)  #>     dim: 800 600 #>     supported_plots: ggplot grob trellis #>     title:  #>     type:  #>  #> [[4]] #> <NewpageBlock> #>   Inherits from: <ContentBlock> #>   Public: #>     clone: function (deep = FALSE)  #>     get_content: function ()  #>     initialize: function ()  #>     set_content: function (content)  #>   Private: #>     content:  #>     \\newpage #>  #>     deep_clone: function (name, value)  #>  #> [[5]] #> <TextBlock> #>   Inherits from: <ContentBlock> #>   Public: #>     clone: function (deep = FALSE)  #>     get_available_styles: function ()  #>     get_content: function ()  #>     get_style: function ()  #>     initialize: function (content = character(0), style = private$styles[1])  #>     set_content: function (content)  #>     set_style: function (style)  #>   Private: #>     content: Header 2 text #>     deep_clone: function (name, value)  #>     style: header2 #>     styles: default header2 header3 verbatim #>  #> [[6]] #> <TextBlock> #>   Inherits from: <ContentBlock> #>   Public: #>     clone: function (deep = FALSE)  #>     get_available_styles: function ()  #>     get_content: function ()  #>     get_style: function ()  #>     initialize: function (content = character(0), style = private$styles[1])  #>     set_content: function (content)  #>     set_style: function (style)  #>   Private: #>     content: A paragraph of default text #>     deep_clone: function (name, value)  #>     style: header2 #>     styles: default header2 header3 verbatim #>  #> [[7]] #> <TableBlock> #>   Inherits from: <ContentBlock> #>   Public: #>     clone: function (deep = FALSE)  #>     finalize: function ()  #>     get_content: function ()  #>     initialize: function (table)  #>     set_content: function (content)  #>   Private: #>     content: /tmp/RtmpIaChTA/file10e12673cf3.rds #>     deep_clone: function (name, value)  #>     supported_tables: data.frame DT rtables TableTree #>  #> [[8]] #> <TableBlock> #>   Inherits from: <ContentBlock> #>   Public: #>     clone: function (deep = FALSE)  #>     finalize: function ()  #>     get_content: function ()  #>     initialize: function (table)  #>     set_content: function (content)  #>   Private: #>     content: /tmp/RtmpIaChTA/file10e6beeffe2.rds #>     deep_clone: function (name, value)  #>     supported_tables: data.frame DT rtables TableTree #>"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TableBlock.html","id":null,"dir":"Reference","previous_headings":"","what":"TableBlock — TableBlock","title":"TableBlock — TableBlock","text":"TableBlock TableBlock","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TableBlock.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"TableBlock — TableBlock","text":"teal.reporter::ContentBlock -> TableBlock","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TableBlock.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"TableBlock — TableBlock","text":"teal.reporter::ContentBlock$get_content()","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TableBlock.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"TableBlock — TableBlock","text":"TableBlock$new() TableBlock$set_content() TableBlock$finalize() TableBlock$clone()","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TableBlock.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"TableBlock — TableBlock","text":"Returns new TableBlock object","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TableBlock.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TableBlock — TableBlock","text":"","code":"TableBlock$new(table)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TableBlock.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TableBlock — TableBlock","text":"table (data.frame, DT, rtables, TableTree) table assigned TableBlock","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TableBlock.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"TableBlock — TableBlock","text":"TableBlock object","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TableBlock.html","id":"method-set-content-","dir":"Reference","previous_headings":"","what":"Method set_content()","title":"TableBlock — TableBlock","text":"Sets content TableBlock.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TableBlock.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"TableBlock — TableBlock","text":"","code":"TableBlock$set_content(content)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TableBlock.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"TableBlock — TableBlock","text":"content (data.frame, DT, rtables) table assigned TableBlock","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TableBlock.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"TableBlock — TableBlock","text":"throws argument table-like object.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TableBlock.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"TableBlock — TableBlock","text":"invisibly self","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TableBlock.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TableBlock — TableBlock","text":"","code":"block <- teal.reporter:::TableBlock$new() block$set_content(iris)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TableBlock.html","id":"method-finalize-","dir":"Reference","previous_headings":"","what":"Method finalize()","title":"TableBlock — TableBlock","text":"finalize TableBlock.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TableBlock.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"TableBlock — TableBlock","text":"","code":"TableBlock$finalize()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TableBlock.html","id":"details-1","dir":"Reference","previous_headings":"","what":"Details","title":"TableBlock — TableBlock","text":"Removes temporary file created constructor.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TableBlock.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"TableBlock — TableBlock","text":"objects class cloneable method.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TableBlock.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"TableBlock — TableBlock","text":"","code":"TableBlock$clone(deep = FALSE)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TableBlock.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"TableBlock — TableBlock","text":"deep Whether make deep clone.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TableBlock.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TableBlock — TableBlock","text":"","code":"## ------------------------------------------------ ## Method `TableBlock$set_content` ## ------------------------------------------------  block <- teal.reporter:::TableBlock$new() block$set_content(iris)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TealReportCard.html","id":null,"dir":"Reference","previous_headings":"","what":"TealReportCard — TealReportCard","title":"TealReportCard — TealReportCard","text":"child ReportCard used teal specific applications. addition parent methods, supports rendering teal specific elements source code, encodings panel content filter panel content part meta data.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TealReportCard.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"TealReportCard — TealReportCard","text":"teal.reporter::ReportCard -> TealReportCard","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TealReportCard.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"TealReportCard — TealReportCard","text":"teal.reporter::ReportCard$append_metadata() teal.reporter::ReportCard$append_plot() teal.reporter::ReportCard$append_table() teal.reporter::ReportCard$append_text() teal.reporter::ReportCard$get_chr_converters() teal.reporter::ReportCard$get_content() teal.reporter::ReportCard$initialize()","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TealReportCard.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"TealReportCard — TealReportCard","text":"TealReportCard$append_src() TealReportCard$append_fs() TealReportCard$append_encodings() TealReportCard$clone()","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TealReportCard.html","id":"method-append-src-","dir":"Reference","previous_headings":"","what":"Method append_src()","title":"TealReportCard — TealReportCard","text":"Appends source code content meta data TealReportCard.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TealReportCard.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TealReportCard — TealReportCard","text":"","code":"TealReportCard$append_src(   src,   chr_converter = function(x) paste0(\"```\\n\", paste(x, collapse = \"\\n\"), \"\\n```\\n\") )"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TealReportCard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TealReportCard — TealReportCard","text":"src (character(1)) code text. chr_converter (function) convert src argument string, default function(x) paste0(\"```\\n\", paste(x, collapse = \"\\n\"), \"\\n```\\n\").","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TealReportCard.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"TealReportCard — TealReportCard","text":"invisibly self","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TealReportCard.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TealReportCard — TealReportCard","text":"","code":"card <- TealReportCard$new()$append_src(   \"ggplot2::ggplot(iris, ggplot2::aes(x = Petal.Length)) + ggplot2::geom_histogram()\" ) card$get_content()[[1]]$get_content()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TealReportCard.html","id":"method-append-fs-","dir":"Reference","previous_headings":"","what":"Method append_fs()","title":"TealReportCard — TealReportCard","text":"Appends filter state list content meta data  TealReportCard.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TealReportCard.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"TealReportCard — TealReportCard","text":"","code":"TealReportCard$append_fs(fs, chr_converter = deparse1)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TealReportCard.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"TealReportCard — TealReportCard","text":"fs (list) list filter states. chr_converter (function) convert fs argument string, default base::deparse1.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TealReportCard.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"TealReportCard — TealReportCard","text":"invisibly self","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TealReportCard.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"TealReportCard — TealReportCard","text":"","code":"card <- TealReportCard$new()$append_fs(   list(data = list(X = list(selected = c(1, 10)))) ) card$get_content()[[1]]$get_content()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TealReportCard.html","id":"method-append-encodings-","dir":"Reference","previous_headings":"","what":"Method append_encodings()","title":"TealReportCard — TealReportCard","text":"Appends encodings list content meta data TealReportCard.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TealReportCard.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"TealReportCard — TealReportCard","text":"","code":"TealReportCard$append_encodings(encodings, chr_converter = deparse1)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TealReportCard.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"TealReportCard — TealReportCard","text":"encodings (list) list encodings selections teal app. chr_converter (function) convert encodings string, default base::deparse1.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TealReportCard.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"TealReportCard — TealReportCard","text":"invisibly self","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TealReportCard.html","id":"examples-2","dir":"Reference","previous_headings":"","what":"Examples","title":"TealReportCard — TealReportCard","text":"","code":"card <- TealReportCard$new()$append_encodings(list(\"variable 1 is X\")) card$get_content()[[1]]$get_content()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TealReportCard.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"TealReportCard — TealReportCard","text":"objects class cloneable method.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TealReportCard.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"TealReportCard — TealReportCard","text":"","code":"TealReportCard$clone(deep = FALSE)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TealReportCard.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"TealReportCard — TealReportCard","text":"deep Whether make deep clone.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TealReportCard.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TealReportCard — TealReportCard","text":"","code":"## ------------------------------------------------ ## Method `TealReportCard$append_src` ## ------------------------------------------------  card <- TealReportCard$new()$append_src(   \"ggplot2::ggplot(iris, ggplot2::aes(x = Petal.Length)) + ggplot2::geom_histogram()\" ) card$get_content()[[1]]$get_content() #> [1] \"```\\nggplot2::ggplot(iris, ggplot2::aes(x = Petal.Length)) + ggplot2::geom_histogram()\\n```\\n\"  ## ------------------------------------------------ ## Method `TealReportCard$append_fs` ## ------------------------------------------------  card <- TealReportCard$new()$append_fs(   list(data = list(X = list(selected = c(1, 10)))) ) card$get_content()[[1]]$get_content() #> [1] \"list(data = list(X = list(selected = c(1, 10))))\"   ## ------------------------------------------------ ## Method `TealReportCard$append_encodings` ## ------------------------------------------------  card <- TealReportCard$new()$append_encodings(list(\"variable 1 is X\")) card$get_content()[[1]]$get_content() #> [1] \"list(\\\"variable 1 is X\\\")\""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TextBlock.html","id":null,"dir":"Reference","previous_headings":"","what":"TextBlock — TextBlock","title":"TextBlock — TextBlock","text":"TextBlock TextBlock","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TextBlock.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"TextBlock — TextBlock","text":"teal.reporter::ContentBlock -> TextBlock","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TextBlock.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"TextBlock — TextBlock","text":"teal.reporter::ContentBlock$get_content() teal.reporter::ContentBlock$set_content()","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TextBlock.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"TextBlock — TextBlock","text":"TextBlock$new() TextBlock$set_style() TextBlock$get_style() TextBlock$get_available_styles() TextBlock$clone()","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TextBlock.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"TextBlock — TextBlock","text":"Returns TextBlock object.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TextBlock.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TextBlock — TextBlock","text":"","code":"TextBlock$new(content = character(0), style = private$styles[1])"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TextBlock.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TextBlock — TextBlock","text":"content (character(1) character(0)) string assigned TextBlock style (character(1)) one : default, header, verbatim","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TextBlock.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"TextBlock — TextBlock","text":"Returns TextBlock object content default style.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TextBlock.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"TextBlock — TextBlock","text":"TextBlock","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TextBlock.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TextBlock — TextBlock","text":"","code":"block <- teal.reporter:::TextBlock$new()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TextBlock.html","id":"method-set-style-","dir":"Reference","previous_headings":"","what":"Method set_style()","title":"TextBlock — TextBlock","text":"Sets style TextBlock.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TextBlock.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"TextBlock — TextBlock","text":"","code":"TextBlock$set_style(style)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TextBlock.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"TextBlock — TextBlock","text":"style (character(1)) one : default, header2, header3, verbatim.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TextBlock.html","id":"details-1","dir":"Reference","previous_headings":"","what":"Details","title":"TextBlock — TextBlock","text":"style bearing rendering block.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TextBlock.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"TextBlock — TextBlock","text":"invisibly self","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TextBlock.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"TextBlock — TextBlock","text":"","code":"block <- teal.reporter:::TextBlock$new() block$set_style(\"header2\")"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TextBlock.html","id":"method-get-style-","dir":"Reference","previous_headings":"","what":"Method get_style()","title":"TextBlock — TextBlock","text":"Returns style TextBlock.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TextBlock.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"TextBlock — TextBlock","text":"","code":"TextBlock$get_style()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TextBlock.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"TextBlock — TextBlock","text":"character(1) style TextBlock","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TextBlock.html","id":"examples-2","dir":"Reference","previous_headings":"","what":"Examples","title":"TextBlock — TextBlock","text":"","code":"block <- teal.reporter:::TextBlock$new() block$get_style()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TextBlock.html","id":"method-get-available-styles-","dir":"Reference","previous_headings":"","what":"Method get_available_styles()","title":"TextBlock — TextBlock","text":"Returns array styles available TextBlock.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TextBlock.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"TextBlock — TextBlock","text":"","code":"TextBlock$get_available_styles()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TextBlock.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"TextBlock — TextBlock","text":"character array styles","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TextBlock.html","id":"examples-3","dir":"Reference","previous_headings":"","what":"Examples","title":"TextBlock — TextBlock","text":"","code":"block <- teal.reporter:::TextBlock$new() block$get_available_styles()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TextBlock.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"TextBlock — TextBlock","text":"objects class cloneable method.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TextBlock.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"TextBlock — TextBlock","text":"","code":"TextBlock$clone(deep = FALSE)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TextBlock.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"TextBlock — TextBlock","text":"deep Whether make deep clone.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TextBlock.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TextBlock — TextBlock","text":"","code":"## ------------------------------------------------ ## Method `TextBlock$new` ## ------------------------------------------------  block <- teal.reporter:::TextBlock$new()   ## ------------------------------------------------ ## Method `TextBlock$set_style` ## ------------------------------------------------  block <- teal.reporter:::TextBlock$new() block$set_style(\"header2\")   ## ------------------------------------------------ ## Method `TextBlock$get_style` ## ------------------------------------------------  block <- teal.reporter:::TextBlock$new() block$get_style() #> [1] \"default\"   ## ------------------------------------------------ ## Method `TextBlock$get_available_styles` ## ------------------------------------------------  block <- teal.reporter:::TextBlock$new() block$get_available_styles() #> [1] \"default\"  \"header2\"  \"header3\"  \"verbatim\""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/add_card_button_srv.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Card Button Server — add_card_button_srv","title":"Add Card Button Server — add_card_button_srv","text":"server adding views/cards Report. details see vignette: vignette(\"simpleReporter\", \"teal.reporter\").","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/add_card_button_srv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Card Button Server — add_card_button_srv","text":"","code":"add_card_button_srv(id, reporter, card_fun)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/add_card_button_srv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Card Button Server — add_card_button_srv","text":"id character reporter Reporter instance. card_fun function returns ReportCard instance, function atcardargument optional comment.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/add_card_button_srv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Card Button Server — add_card_button_srv","text":"shiny::moduleServer","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/add_card_button_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Card Button User Interface — add_card_button_ui","title":"Add Card Button User Interface — add_card_button_ui","text":"button adding views/cards Report. details see vignette: vignette(\"simpleReporter\", \"teal.reporter\").","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/add_card_button_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Card Button User Interface — add_card_button_ui","text":"","code":"add_card_button_ui(id)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/add_card_button_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Card Button User Interface — add_card_button_ui","text":"id character","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/add_card_button_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Card Button User Interface — add_card_button_ui","text":"shiny::tagList","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/as_yaml_auto.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse a Named List to the Rmd yaml Header — as_yaml_auto","title":"Parse a Named List to the Rmd yaml Header — as_yaml_auto","text":"parse named list Rmd yaml header, developer gets automatically tabulated Rmd yaml header. non nested (flat) list processed, nested list directly processed yaml::.yaml function. Rmd yaml header fields vector supported, c(\"author\", \"date\", \"title\", \"subtitle\", \"abstract\", \"keywords\", \"subject\", \"description\", \"category\", \"lang\"). Moreover outputfield types rmarkdown package arguments supported.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/as_yaml_auto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse a Named List to the Rmd yaml Header — as_yaml_auto","text":"","code":"as_yaml_auto(   input_list,   as_header = TRUE,   convert_logi = TRUE,   multi_output = FALSE,   silent = FALSE )"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/as_yaml_auto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse a Named List to the Rmd yaml Header — as_yaml_auto","text":"input_list named list non nested slots names values compatible Rmd yaml header. as_header logical optionally wrap result teal.reporter::md_header, default TRUE. convert_logi logicalconvert character values logical, recognized quoted yaml logical values , default TRUE. multi_output logicalmulti output slots input argument, default FALSE. silent logical suppress messages warnings, default FALSE.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/as_yaml_auto.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse a Named List to the Rmd yaml Header — as_yaml_auto","text":"character rmd_yaml_header class, result yaml::.yaml, optionally wrapped teal.reporter::md_header.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/as_yaml_auto.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse a Named List to the Rmd yaml Header — as_yaml_auto","text":"","code":"# nested so using yaml::as.yaml directly as_yaml_auto(   list(author = \"\", output = list(pdf_document = list(toc = TRUE))) ) #> --- #> author: '' #> output: #>   pdf_document: #>     toc: yes #> ---  # auto parsing for a flat list, like shiny input input <- list(author = \"\", output = \"pdf_document\", toc = TRUE, keep_tex = TRUE) as_yaml_auto(input) #> --- #> author: '' #> output: #>   pdf_document: #>     toc: yes #>     keep_tex: yes #> ---  as_yaml_auto(list(author = \"\", output = \"pdf_document\", toc = TRUE, keep_tex = \"TRUE\")) #> The 'TRUE' value should be a logical, so it is automatically converted. #> --- #> author: '' #> output: #>   pdf_document: #>     toc: yes #>     keep_tex: yes #> ---  as_yaml_auto(list(   author = \"\", output = \"pdf_document\", toc = TRUE, keep_tex = TRUE,   wrong = 2 )) #> Warning: Not recognized and skipped arguments: wrong #> --- #> author: '' #> output: #>   pdf_document: #>     toc: yes #>     keep_tex: yes #> ---  as_yaml_auto(list(author = \"\", output = \"pdf_document\", toc = TRUE, keep_tex = 2),   silent = TRUE ) #> --- #> author: '' #> output: #>   pdf_document: #>     toc: yes #>     keep_tex: 2.0 #> ---  input <- list(author = \"\", output = \"pdf_document\", toc = TRUE, keep_tex = \"True\") as_yaml_auto(input) #> The 'True' value should be a logical, so it is automatically converted. #> --- #> author: '' #> output: #>   pdf_document: #>     toc: yes #>     keep_tex: yes #> --- as_yaml_auto(input, convert_logi = TRUE, silent = TRUE) #> --- #> author: '' #> output: #>   pdf_document: #>     toc: yes #>     keep_tex: yes #> --- as_yaml_auto(input, silent = TRUE) #> --- #> author: '' #> output: #>   pdf_document: #>     toc: yes #>     keep_tex: yes #> --- as_yaml_auto(input, convert_logi = FALSE, silent = TRUE) #> --- #> author: '' #> output: #>   pdf_document: #>     toc: yes #>     keep_tex: 'True' #> ---  as_yaml_auto(   list(     author = \"\", output = \"pdf_document\",     output = \"html_document\", toc = TRUE, keep_tex = TRUE   ),   multi_output = TRUE ) #> --- #> author: '' #> output: #>   pdf_document: #>     toc: yes #>     keep_tex: yes #>   html_document: #>     toc: yes #> --- as_yaml_auto(   list(     author = \"\", output = \"pdf_document\",     output = \"html_document\", toc = \"True\", keep_tex = TRUE   ),   multi_output = TRUE ) #> The 'True' value should be a logical, so it is automatically converted. #> --- #> author: '' #> output: #>   pdf_document: #>     toc: yes #>     keep_tex: yes #>   html_document: #>     toc: yes #> ---"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/conv_str_logi.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a character of a yaml boolean to a logical value — conv_str_logi","title":"Convert a character of a yaml boolean to a logical value — conv_str_logi","text":"convert character yaml boolean logical value.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/conv_str_logi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a character of a yaml boolean to a logical value — conv_str_logi","text":"","code":"conv_str_logi(   input,   name = \"\",   pos_logi = c(\"TRUE\", \"true\", \"True\", \"yes\", \"y\", \"Y\", \"on\"),   neg_logi = c(\"FALSE\", \"false\", \"False\", \"no\", \"n\", \"N\", \"off\"),   silent = TRUE )"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/conv_str_logi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a character of a yaml boolean to a logical value — conv_str_logi","text":"input character name charcter pos_logi character vector yaml values treated TRUE. neg_logi character vector yaml values treated FALSE. silent logical suppress messages warnings.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/conv_str_logi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a character of a yaml boolean to a logical value — conv_str_logi","text":"input argument appropriate logical value.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/conv_str_logi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a character of a yaml boolean to a logical value — conv_str_logi","text":"","code":"teal.reporter:::conv_str_logi(\"TRUE\") #> [1] TRUE teal.reporter:::conv_str_logi(\"True\") #> [1] TRUE  teal.reporter:::conv_str_logi(\"off\") #> [1] FALSE teal.reporter:::conv_str_logi(\"n\") #> [1] FALSE  teal.reporter:::conv_str_logi(\"sth\") #> [1] \"sth\""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/download_report_button_srv.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Button Server — download_report_button_srv","title":"Download Button Server — download_report_button_srv","text":"server downloading Report. details see vignette: vignette(\"simpleReporter\", \"teal.reporter\").","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/download_report_button_srv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Button Server — download_report_button_srv","text":"","code":"download_report_button_srv(   id,   reporter,   notification = TRUE,   rmd_output = c(\"html_document\", \"pdf_document\", \"powerpoint_presentation\",     \"word_document\"),   rmd_yaml_args = list(author = \"NEST\", title = \"Report\", date =     as.character(Sys.Date()), output = \"html_document\") )"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/download_report_button_srv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download Button Server — download_report_button_srv","text":"id character reporter Reporter instance. notification logical whether add shiny notification download process. Default TRUE. rmd_output character vector rmarkdown output types, default possible c(\"pdf_document\", \"html_document\", \"powerpoint_presentation\", \"word_document\"). rmd_yaml_args named list vector Rmd yaml header fields default values. Default list(author = \"NEST\", title = \"Report\", date = Sys.Date(), output = \"html_document\"). Please update values moment.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/download_report_button_srv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download Button Server — download_report_button_srv","text":"shiny::moduleServer","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/download_report_button_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Button Reporter User Interface — download_report_button_ui","title":"Download Button Reporter User Interface — download_report_button_ui","text":"button downloading Report. details see vignette: vignette(\"simpleReporter\", \"teal.reporter\").","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/download_report_button_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Button Reporter User Interface — download_report_button_ui","text":"","code":"download_report_button_ui(id)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/download_report_button_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download Button Reporter User Interface — download_report_button_ui","text":"id character","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/download_report_button_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download Button Reporter User Interface — download_report_button_ui","text":"shiny::tagList","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/md_header.html","id":null,"dir":"Reference","previous_headings":"","what":"wrap a yaml string to the markdown header — md_header","title":"wrap a yaml string to the markdown header — md_header","text":"wrap yaml string markdown header.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/md_header.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"wrap a yaml string to the markdown header — md_header","text":"","code":"md_header(x)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/md_header.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"wrap a yaml string to the markdown header — md_header","text":"x character yaml formatted string.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/md_header.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"wrap a yaml string to the markdown header — md_header","text":"","code":"yaml <- list(   author = teal.reporter:::yaml_quoted(\"NEST\"),   title = teal.reporter:::yaml_quoted(\"Report\"),   date = teal.reporter:::yaml_quoted(\"07/04/2019\"),   output = list(pdf_document = list(keep_tex = TRUE)) ) teal.reporter:::md_header(yaml::as.yaml(yaml)) #> [1] \"---\\nauthor: \\\"NEST\\\"\\ntitle: \\\"Report\\\"\\ndate: \\\"07/04/2019\\\"\\noutput:\\n  pdf_document:\\n    keep_tex: yes\\n---\\n\""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/print.rmd_yaml_header.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for the yaml_header class — print.rmd_yaml_header","title":"Print method for the yaml_header class — print.rmd_yaml_header","text":"Print method yaml_header class.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/print.rmd_yaml_header.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for the yaml_header class — print.rmd_yaml_header","text":"","code":"# S3 method for rmd_yaml_header print(x, ...)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/print.rmd_yaml_header.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for the yaml_header class — print.rmd_yaml_header","text":"x rmd_yaml_header class object. ... optional text.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/print.rmd_yaml_header.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print method for the yaml_header class — print.rmd_yaml_header","text":"","code":"input <- list(author = \"\", output = \"pdf_document\", toc = TRUE, keep_tex = TRUE) out <- as_yaml_auto(input) out #> --- #> author: '' #> output: #>   pdf_document: #>     toc: yes #>     keep_tex: yes #> --- print(out) #> --- #> author: '' #> output: #>   pdf_document: #>     toc: yes #>     keep_tex: yes #> ---"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/report_render_and_compress.html","id":null,"dir":"Reference","previous_headings":"","what":"Render the Report — report_render_and_compress","title":"Render the Report — report_render_and_compress","text":"render report zip created directory.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/report_render_and_compress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render the Report — report_render_and_compress","text":"","code":"report_render_and_compress(reporter, input_list, file = tempdir())"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/report_render_and_compress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render the Report — report_render_and_compress","text":"reporter Reporter instance. input_list list like shiny input converted regular named list. file character copy returned directory.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/report_render_and_compress.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Render the Report — report_render_and_compress","text":"file argument, invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/reset_report_button_srv.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset Button Server — reset_report_button_srv","title":"Reset Button Server — reset_report_button_srv","text":"server resetting Report content. details see vignette: vignette(\"simpleReporter\", \"teal.reporter\").","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/reset_report_button_srv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset Button Server — reset_report_button_srv","text":"","code":"reset_report_button_srv(id, reporter)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/reset_report_button_srv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset Button Server — reset_report_button_srv","text":"id character reporter Reporter instance.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/reset_report_button_srv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset Button Server — reset_report_button_srv","text":"shiny::moduleServer","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/reset_report_button_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset Button Reporter User Interface — reset_report_button_ui","title":"Reset Button Reporter User Interface — reset_report_button_ui","text":"button resetting report content. details see vignette: vignette(\"simpleReporter\", \"teal.reporter\").","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/reset_report_button_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset Button Reporter User Interface — reset_report_button_ui","text":"","code":"reset_report_button_ui(id)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/reset_report_button_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset Button Reporter User Interface — reset_report_button_ui","text":"id character","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/reset_report_button_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset Button Reporter User Interface — reset_report_button_ui","text":"shiny::tagList","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/rmd_output_arguments.html","id":null,"dir":"Reference","previous_headings":"","what":"Get document output arguments from the rmarkdown package — rmd_output_arguments","title":"Get document output arguments from the rmarkdown package — rmd_output_arguments","text":"get document output arguments rmarkdown package","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/rmd_output_arguments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get document output arguments from the rmarkdown package — rmd_output_arguments","text":"","code":"rmd_output_arguments(output_name, default_values = FALSE)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/rmd_output_arguments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get document output arguments from the rmarkdown package — rmd_output_arguments","text":"output_name character``rmarkdown output name. default_values logical return default values argument.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/rmd_output_arguments.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get document output arguments from the rmarkdown package — rmd_output_arguments","text":"","code":"rmd_output_arguments(\"pdf_document\") #>  [1] \"toc\"                \"toc_depth\"          \"number_sections\"    #>  [4] \"fig_width\"          \"fig_height\"         \"fig_crop\"           #>  [7] \"fig_caption\"        \"dev\"                \"df_print\"           #> [10] \"highlight\"          \"template\"           \"keep_tex\"           #> [13] \"keep_md\"            \"latex_engine\"       \"citation_package\"   #> [16] \"includes\"           \"md_extensions\"      \"output_extensions\"  #> [19] \"pandoc_args\"        \"extra_dependencies\" rmd_output_arguments(\"pdf_document\", TRUE) #> $toc #> [1] FALSE #>  #> $toc_depth #> [1] 2 #>  #> $number_sections #> [1] FALSE #>  #> $fig_width #> [1] 6.5 #>  #> $fig_height #> [1] 4.5 #>  #> $fig_crop #> [1] \"auto\" #>  #> $fig_caption #> [1] TRUE #>  #> $dev #> [1] \"pdf\" #>  #> $df_print #> [1] \"default\" #>  #> $highlight #> [1] \"default\" #>  #> $template #> [1] \"default\" #>  #> $keep_tex #> [1] FALSE #>  #> $keep_md #> [1] FALSE #>  #> $latex_engine #> [1] \"pdflatex\" #>  #> $citation_package #> c(\"default\", \"natbib\", \"biblatex\") #>  #> $includes #> NULL #>  #> $md_extensions #> NULL #>  #> $output_extensions #> NULL #>  #> $pandoc_args #> NULL #>  #> $extra_dependencies #> NULL #>"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/rmd_outputs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get document output types from the rmarkdown package — rmd_outputs","title":"Get document output types from the rmarkdown package — rmd_outputs","text":"get document output types rmarkdown package.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/rmd_outputs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get document output types from the rmarkdown package — rmd_outputs","text":"","code":"rmd_outputs()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/rmd_outputs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get document output types from the rmarkdown package — rmd_outputs","text":"character vector.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/rmd_outputs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get document output types from the rmarkdown package — rmd_outputs","text":"","code":"rmd_outputs() #>  [1] \"beamer_presentation\"      \"context_document\"         #>  [3] \"github_document\"          \"html_document\"            #>  [5] \"html_document_base\"       \"html_extras_for_document\" #>  [7] \"ioslides_presentation\"    \"latex_document\"           #>  [9] \"md_document\"              \"odt_document\"             #> [11] \"pdf_document\"             \"powerpoint_presentation\"  #> [13] \"rtf_document\"             \"slidy_presentation\"       #> [15] \"word_document\""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/simple_reporter_srv.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple Reporter Server — simple_reporter_srv","title":"Simple Reporter Server — simple_reporter_srv","text":"three buttons adding views, downloading resetting Report. add module add_report_card_simple id, download module download_button_simple id reset module reset_button_simple id. details see vignette: vignette(\"simpleReporter\", \"teal.reporter\").","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/simple_reporter_srv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple Reporter Server — simple_reporter_srv","text":"","code":"simple_reporter_srv(id, reporter, card_fun, notification = TRUE)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/simple_reporter_srv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple Reporter Server — simple_reporter_srv","text":"id character reporter Reporter instance. card_fun function returns ReportCard instance, function atcardargument optional comment. notification logical add shiny notification download process.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/simple_reporter_srv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simple Reporter Server — simple_reporter_srv","text":"shiny::moduleServer","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/simple_reporter_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple Reporter User Interface — simple_reporter_ui","title":"Simple Reporter User Interface — simple_reporter_ui","text":"three buttons adding views, downloading resetting Report. details see vignette: vignette(\"simpleReporter\", \"teal.reporter\").","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/simple_reporter_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple Reporter User Interface — simple_reporter_ui","text":"","code":"simple_reporter_ui(id)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/simple_reporter_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple Reporter User Interface — simple_reporter_ui","text":"id character","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/simple_reporter_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simple Reporter User Interface — simple_reporter_ui","text":"shiny::tagList","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/teal.reporter.html","id":null,"dir":"Reference","previous_headings":"","what":"Reporting tools for shiny modules. — teal.reporter","title":"Reporting tools for shiny modules. — teal.reporter","text":"collection tools creating, previewing modifying reports shiny modules.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/yaml_quoted.html","id":null,"dir":"Reference","previous_headings":"","what":"quoted string for yaml — yaml_quoted","title":"quoted string for yaml — yaml_quoted","text":"add quoted attribute yaml package","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/yaml_quoted.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"quoted string for yaml — yaml_quoted","text":"","code":"yaml_quoted(x)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/yaml_quoted.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"quoted string for yaml — yaml_quoted","text":"x character","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/yaml_quoted.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"quoted string for yaml — yaml_quoted","text":"","code":"yaml <- list(   author = teal.reporter:::yaml_quoted(\"NEST\"),   title = teal.reporter:::yaml_quoted(\"Report\"),   date = teal.reporter:::yaml_quoted(\"07/04/2019\"),   output = list(pdf_document = list(keep_tex = TRUE)) ) yaml::as.yaml(yaml) #> [1] \"author: \\\"NEST\\\"\\ntitle: \\\"Report\\\"\\ndate: \\\"07/04/2019\\\"\\noutput:\\n  pdf_document:\\n    keep_tex: yes\\n\""},{"path":"https://insightsengineering.github.io/teal.reporter/news/index.html","id":"tealreporter-0009008","dir":"Changelog","previous_headings":"","what":"teal.reporter 0.0.0.9008","title":"teal.reporter 0.0.0.9008","text":"Initialize package.","code":""}]
