[{"path":[]},{"path":"https://insightsengineering.github.io/teal.reporter/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others‚Äô private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/CODE_OF_CONDUCT.html","id":"1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/CODE_OF_CONDUCT.html","id":"2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/CODE_OF_CONDUCT.html","id":"3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/CODE_OF_CONDUCT.html","id":"4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired Mozilla‚Äôs code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contribution Guidelines","title":"Contribution Guidelines","text":"First , thank taking time contribute! ‚úåÔ∏è üéâ love input regardless size, content scope - whether issue, feature request, bug-fix documentation enhancement. Thanks üôè rock ü§ò","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/CONTRIBUTING.html","id":"table-of-contents","dir":"","previous_headings":"","what":"Table of contents","title":"Contribution Guidelines","text":"üë∂ Getting started üìî Code Conduct üóÉ License üêõ report bug? üí° request change? üö© submit change? üëó Style guide üßê Recognition model ‚ùì questions","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/CONTRIBUTING.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Contribution Guidelines","text":"introduction, please read README file. can also find vignettes . Usually find ‚ÄúGetting started‚Äù article. Please also see package manual form pkgdown website.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contribution Guidelines","text":"project governed Code Conduct. participating, expected follow rules outlined .","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/CONTRIBUTING.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Contribution Guidelines","text":"code changes license covers project.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/CONTRIBUTING.html","id":"how-to-report-a-bug","dir":"","previous_headings":"","what":"How to report a bug?","title":"Contribution Guidelines","text":"use GitHub track issues, feature requests well bugs. opening new issue please double-check ‚Äôs already reported (don‚Äôt worry duplicate - manage). already - -vote ‚¨ÜÔ∏è. look faster! kindly ask write good issue minimal reproducible example demonstrates problem. also great know local environment (R session info) well. find template issues opening bug ticket. speed fixing process lot! üìà.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/CONTRIBUTING.html","id":"how-to-request-the-change","dir":"","previous_headings":"","what":"How to request the change?","title":"Contribution Guidelines","text":"notice missing feature idea enhance existing functionalities - please let us know creating new issue. opening new issue please double-check ‚Äôs already reported (don‚Äôt worry occurs duplicate - manage). already - -vote ‚¨ÜÔ∏è. look faster! Please elaborate ‚Äú?‚Äù - ‚Äôs context, ‚Äôs benefit . find template opening feature request ticket. help us prioritize submit meaningful changes.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.reporter/CONTRIBUTING.html","id":"github-flow","dir":"","previous_headings":"How to submit a change?","what":"GitHub Flow","title":"Contribution Guidelines","text":"following GitHub Flow collaborate repository. order submit changes please following: Open branch Please see branch naming convention . don‚Äôt write access please fork first. Make changes. Make sure code passes checks well documented tested decrease existing test coverage üí™. Create PR(s) Please link issue make good change description. Include development assumptions necessary. Give details reviewer efficiently check changes. Address review comments Please apply changes necessary. disagree reviewer - please explain . approved - merge PR(s) delete branch","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/CONTRIBUTING.html","id":"branching-convention","dir":"","previous_headings":"How to submit a change?","what":"Branching convention","title":"Contribution Guidelines","text":"case working task inside one specific repository, please name branch <issue_id>_<short_description> lowercase. Multiple words description divided underscore (_). E.g. 15_fix_spelling_error case try solve spelling mistake mentioned issue number 15. case working task one repository affects multiple repositories, please always name branches: <issue_id>_<issue_repo>_<short description> lowercase. Multiple words description divided underscore (_). E.g. 15_abc_fix_spelling_error case try solve spelling mistake inside xyz closes issue 15 inside abc.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/CONTRIBUTING.html","id":"monorepo-and-stageddependencies","dir":"","previous_headings":"How to submit a change?","what":"monorepo and staged.dependencies","title":"Contribution Guidelines","text":"Sometimes might need change upstream dependent package(s) able submit meaningful change. using staged.dependencies functionality simulate monorepo behavior. configuration already staged_dependencies.yaml file. just need name feature branches identically. exception branch naming convention described . Please read package manual details.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.reporter/CONTRIBUTING.html","id":"r--package-versions","dir":"","previous_headings":"How to submit a change? > Recommended development environment & tools","what":"R & package versions","title":"Contribution Guidelines","text":"continuously test packages newest R version well given package dependencies. recommend set-working environment way. can find details given GitHub Action execution log - step prints session info. find bugs older version dependencies - please create appropriate bug ticket.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/CONTRIBUTING.html","id":"pre-commit","dir":"","previous_headings":"How to submit a change? > Recommended development environment & tools","what":"pre-commit","title":"Contribution Guidelines","text":"highly recommend pre-commit tool combined R hooks pre-commit execute checks prior committing pushing. configuration already repository (). Please, follow installation guide official pre-commit page GitHub readme page R hooks.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/CONTRIBUTING.html","id":"style-guide","dir":"","previous_headings":"","what":"Style guide","title":"Contribution Guidelines","text":"repository follows standard tidyverse style guide ‚Äôs checked lintr. slight modifications default settings available .lintr file. Although allows flexibility - recommend sticking style existing code. Please note style also lintr check place validate code.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/CONTRIBUTING.html","id":"recognition-model","dir":"","previous_headings":"","what":"Recognition model","title":"Contribution Guidelines","text":"contribution highly welcomed appreciated. contribution data already GitHub repository insights feature, introduced objective rules recognize significant contribution became package author: Minimum 5% lines code authored (determined git blame query) top 5 contributors terms number commits lines added lines removed. package maintainer also reserves rights manually adjust criteria recognize contributions.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/CONTRIBUTING.html","id":"any-questions","dir":"","previous_headings":"","what":"Any questions","title":"Contribution Guidelines","text":"questions regarding contribution - please reach repository maintainer(s)!","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.reporter/SECURITY.html","id":"reporting-security-issues","dir":"","previous_headings":"","what":"Reporting Security Issues","title":"Security Policy","text":"believe found security vulnerability repositories organization, please report us coordinated disclosure. Please report security vulnerabilities public GitHub issues, discussions, pull requests. Instead, please send email vulnerability.management[@]roche.com. Please include much information listed can help us better understand resolve issue: type issue (e.g., buffer overflow, SQL injection, cross-site scripting) Full paths source file(s) related manifestation issue location affected source code (tag/branch/commit direct URL) special configuration required reproduce issue Step--step instructions reproduce issue Proof--concept exploit code (possible) Impact issue, including attacker might exploit issue information help us triage report quickly.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/SECURITY.html","id":"data-security-standards-dss","dir":"","previous_headings":"","what":"Data Security Standards (DSS)","title":"Security Policy","text":"Please make sure reporting issues form bug, feature, pull request, sensitive information PII, PHI, PCI completely removed text attachments, including pictures videos.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/articles/teal.reporter.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Getting Started with teal.reporter","text":"times explore data shiny module, spot interesting finding capture , slides presentation, markdown article another medium. teal.reporter helps enhance shiny module users copy-paste save every finding write markdown show . teal.reporter gives ready use shiny modules objects work together prepare reports module minimal input users shiny modules developer. can done easy adding one reporting tools module:","code":"library(teal.reporter) ui <- shiny::fluidPage(simple_reporter_ui(\"simple\")) server <- function(input, output, session) {   # The bulk of your module logic here    create_module_report <- function(card) {     card$append_text(\"This is the content of the report from the `simple` module\")   }   simple_reporter_srv(\"simple\", Reporter$new(), create_module_report) }  if (interactive()) shiny::shinyApp(ui, server)"},{"path":[]},{"path":"https://insightsengineering.github.io/teal.reporter/articles/teal.reporter.html","id":"basic-usage","dir":"Articles","previous_headings":"Where to next","what":"Basic usage","title":"Getting Started with teal.reporter","text":"basic usage teal.reporter quickest way enhance modules reporting, head vignette simple reporting setup.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/articles/teal.reporter.html","id":"previewing-a-report","dir":"Articles","previous_headings":"Where to next","what":"Previewing a report","title":"Getting Started with teal.reporter","text":"want let users application preview report reorganize , look vignette ‚Äúreport previewer‚Äù module.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/articles/teal.reporter.html","id":"integration-with-teal","dir":"Articles","previous_headings":"Where to next","what":"Integration with teal","title":"Getting Started with teal.reporter","text":"interested teal.reporter fits teal, look vignette teal.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/articles/teal.reporter.html","id":"more-control","dir":"Articles","previous_headings":"Where to next","what":"More control","title":"Getting Started with teal.reporter","text":"like control layout simple reporting tool, recommend reading documentation smallest building blocks teal.reporter offers, add_card_button_srv(), download_report_button_srv() reset_report_button_srv().","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Maciej Nasinski. Author, maintainer. Konrad Pagacz. Author. Mahmoud Hallal. Author. F. Hoffmann-La Roche AG. Copyright holder, funder.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Nasinski M, Pagacz K, Hallal M (2022). teal.reporter: Reporting tools Shiny modules. https://github.com/insightsengineering/teal.reporter, https://insightsengineering.github.io/teal.reporter/.","code":"@Manual{,   title = {teal.reporter: Reporting tools for Shiny modules},   author = {Maciej Nasinski and Konrad Pagacz and Mahmoud Hallal},   year = {2022},   note = {https://github.com/insightsengineering/teal.reporter, https://insightsengineering.github.io/teal.reporter/}, }"},{"path":"https://insightsengineering.github.io/teal.reporter/index.html","id":"tealreporter","dir":"","previous_headings":"","what":"Reporting tools for Shiny modules","title":"Reporting tools for Shiny modules","text":"teal.reporter enables shiny teal applications include reporting functionality. shiny app developer (teal module developer) specifies content report teal.reporter package handles everything else. package provides: shiny module adding cards (.e.¬†items) report shiny module previewing report -screen ability download zip file containing reports","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Reporting tools for Shiny modules","text":"recommended create use Github PAT install latest version package. PAT, run following: might need manually install package dependencies installing package without dependencies = FALSE argument install_github may produce error. See package vignettes browseVignettes(package = \"teal.reporter\") usage package.","code":"Sys.setenv(GITHUB_PAT = \"your_access_token_here\") if (!require(\"devtools\")) install.packages(\"devtools\") devtools::install_github(\"insightsengineering/teal.reporter@*release\", dependencies = FALSE)"},{"path":"https://insightsengineering.github.io/teal.reporter/pull_request_template.html","id":null,"dir":"","previous_headings":"","what":"Pull Request","title":"Pull Request","text":"Fixes #nnn","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ContentBlock.html","id":null,"dir":"Reference","previous_headings":"","what":"ContentBlock ‚Äî ContentBlock","title":"ContentBlock ‚Äî ContentBlock","text":"ContentBlock ContentBlock","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ContentBlock.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"ContentBlock ‚Äî ContentBlock","text":"ContentBlock$new() ContentBlock$set_content() ContentBlock$get_content() ContentBlock$clone()","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ContentBlock.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"ContentBlock ‚Äî ContentBlock","text":"Returns ContentBlock object.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ContentBlock.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ContentBlock ‚Äî ContentBlock","text":"","code":"ContentBlock$new()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ContentBlock.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ContentBlock ‚Äî ContentBlock","text":"Returns ContentBlock object content default style.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ContentBlock.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"ContentBlock ‚Äî ContentBlock","text":"ContentBlock","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ContentBlock.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ContentBlock ‚Äî ContentBlock","text":"","code":"block <- teal.reporter:::ContentBlock$new()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ContentBlock.html","id":"method-set-content-","dir":"Reference","previous_headings":"","what":"Method set_content()","title":"ContentBlock ‚Äî ContentBlock","text":"Sets content ContentBlock.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ContentBlock.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"ContentBlock ‚Äî ContentBlock","text":"","code":"ContentBlock$set_content(content)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ContentBlock.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ContentBlock ‚Äî ContentBlock","text":"content (character(0) character(1)) string literal file path assigned ContentBlock","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ContentBlock.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"ContentBlock ‚Äî ContentBlock","text":"invisibly self","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ContentBlock.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"ContentBlock ‚Äî ContentBlock","text":"","code":"block <- teal.reporter:::ContentBlock$new() block$set_content(\"Base64 encoded picture\")"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ContentBlock.html","id":"method-get-content-","dir":"Reference","previous_headings":"","what":"Method get_content()","title":"ContentBlock ‚Äî ContentBlock","text":"Returns absolute path content ContentBlock","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ContentBlock.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"ContentBlock ‚Äî ContentBlock","text":"","code":"ContentBlock$get_content()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ContentBlock.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"ContentBlock ‚Äî ContentBlock","text":"character content ContentBlock","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ContentBlock.html","id":"examples-2","dir":"Reference","previous_headings":"","what":"Examples","title":"ContentBlock ‚Äî ContentBlock","text":"","code":"block <- teal.reporter:::ContentBlock$new() block$get_content()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ContentBlock.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"ContentBlock ‚Äî ContentBlock","text":"objects class cloneable method.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ContentBlock.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"ContentBlock ‚Äî ContentBlock","text":"","code":"ContentBlock$clone(deep = FALSE)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ContentBlock.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"ContentBlock ‚Äî ContentBlock","text":"deep Whether make deep clone.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ContentBlock.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ContentBlock ‚Äî ContentBlock","text":"","code":"## ------------------------------------------------ ## Method `ContentBlock$new` ## ------------------------------------------------  block <- teal.reporter:::ContentBlock$new()   ## ------------------------------------------------ ## Method `ContentBlock$set_content` ## ------------------------------------------------  block <- teal.reporter:::ContentBlock$new() block$set_content(\"Base64 encoded picture\")   ## ------------------------------------------------ ## Method `ContentBlock$get_content` ## ------------------------------------------------  block <- teal.reporter:::ContentBlock$new() block$get_content() #> character(0)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/NewpageBlock.html","id":null,"dir":"Reference","previous_headings":"","what":"NewpageBlock ‚Äî NewpageBlock","title":"NewpageBlock ‚Äî NewpageBlock","text":"NewpageBlock NewpageBlock","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/NewpageBlock.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"NewpageBlock ‚Äî NewpageBlock","text":"teal.reporter::ContentBlock -> NewpageBlock","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/NewpageBlock.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"NewpageBlock ‚Äî NewpageBlock","text":"teal.reporter::ContentBlock$get_content() teal.reporter::ContentBlock$set_content()","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/NewpageBlock.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"NewpageBlock ‚Äî NewpageBlock","text":"NewpageBlock$new() NewpageBlock$clone()","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/NewpageBlock.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"NewpageBlock ‚Äî NewpageBlock","text":"Returns NewpageBlock object.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/NewpageBlock.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NewpageBlock ‚Äî NewpageBlock","text":"","code":"NewpageBlock$new()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/NewpageBlock.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"NewpageBlock ‚Äî NewpageBlock","text":"Returns NewpageBlock object content default style.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/NewpageBlock.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"NewpageBlock ‚Äî NewpageBlock","text":"NewpageBlock","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/NewpageBlock.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NewpageBlock ‚Äî NewpageBlock","text":"","code":"block <- teal.reporter:::NewpageBlock$new()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/NewpageBlock.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"NewpageBlock ‚Äî NewpageBlock","text":"objects class cloneable method.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/NewpageBlock.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"NewpageBlock ‚Äî NewpageBlock","text":"","code":"NewpageBlock$clone(deep = FALSE)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/NewpageBlock.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NewpageBlock ‚Äî NewpageBlock","text":"deep Whether make deep clone.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/NewpageBlock.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NewpageBlock ‚Äî NewpageBlock","text":"","code":"## ------------------------------------------------ ## Method `NewpageBlock$new` ## ------------------------------------------------  block <- teal.reporter:::NewpageBlock$new()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":null,"dir":"Reference","previous_headings":"","what":"PictureBlock ‚Äî PictureBlock","title":"PictureBlock ‚Äî PictureBlock","text":"PictureBlock PictureBlock","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"PictureBlock ‚Äî PictureBlock","text":"teal.reporter::ContentBlock -> PictureBlock","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"PictureBlock ‚Äî PictureBlock","text":"teal.reporter::ContentBlock$get_content()","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"PictureBlock ‚Äî PictureBlock","text":"PictureBlock$new() PictureBlock$set_content() PictureBlock$finalize() PictureBlock$set_title() PictureBlock$get_title() PictureBlock$set_dim() PictureBlock$get_dim() PictureBlock$clone()","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"PictureBlock ‚Äî PictureBlock","text":"Returns new PictureBlock object.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PictureBlock ‚Äî PictureBlock","text":"","code":"PictureBlock$new(plot)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PictureBlock ‚Äî PictureBlock","text":"plot (ggplot, grid) picture PictureBlock","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"PictureBlock ‚Äî PictureBlock","text":"PictureBlock object","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"method-set-content-","dir":"Reference","previous_headings":"","what":"Method set_content()","title":"PictureBlock ‚Äî PictureBlock","text":"Sets content PictureBlock.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"PictureBlock ‚Äî PictureBlock","text":"","code":"PictureBlock$set_content(content)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"PictureBlock ‚Äî PictureBlock","text":"content (ggplot, grob, trellis) picture PictureBlock","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"PictureBlock ‚Äî PictureBlock","text":"throws argument ggplot, grob trellis plot.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"PictureBlock ‚Äî PictureBlock","text":"invisibly self","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PictureBlock ‚Äî PictureBlock","text":"","code":"block <- teal.reporter:::PictureBlock$new() block$set_content(ggplot2::ggplot(iris))  block <- teal.reporter:::PictureBlock$new() block$set_content(lattice::bwplot(1))  block <- teal.reporter:::PictureBlock$new() block$set_content(ggplot2::ggplotGrob(ggplot2::ggplot(iris)))"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"method-finalize-","dir":"Reference","previous_headings":"","what":"Method finalize()","title":"PictureBlock ‚Äî PictureBlock","text":"Finalizes PictureBlock.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"PictureBlock ‚Äî PictureBlock","text":"","code":"PictureBlock$finalize()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"details-1","dir":"Reference","previous_headings":"","what":"Details","title":"PictureBlock ‚Äî PictureBlock","text":"Removes temporary file created constructor.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"method-set-title-","dir":"Reference","previous_headings":"","what":"Method set_title()","title":"PictureBlock ‚Äî PictureBlock","text":"Sets title PictureBlock.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"PictureBlock ‚Äî PictureBlock","text":"","code":"PictureBlock$set_title(title)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"PictureBlock ‚Äî PictureBlock","text":"title (character(1)) string assigned PictureBlock","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"details-2","dir":"Reference","previous_headings":"","what":"Details","title":"PictureBlock ‚Äî PictureBlock","text":"throws argument character(1).","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"PictureBlock ‚Äî PictureBlock","text":"invisibly self","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"PictureBlock ‚Äî PictureBlock","text":"","code":"block <- teal.reporter:::PictureBlock$new() block$set_title(\"Title\")"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"method-get-title-","dir":"Reference","previous_headings":"","what":"Method get_title()","title":"PictureBlock ‚Äî PictureBlock","text":"Returns title PictureBlock","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"PictureBlock ‚Äî PictureBlock","text":"","code":"PictureBlock$get_title()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"PictureBlock ‚Äî PictureBlock","text":"content PictureBlock","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"examples-2","dir":"Reference","previous_headings":"","what":"Examples","title":"PictureBlock ‚Äî PictureBlock","text":"","code":"block <- teal.reporter:::PictureBlock$new() block$get_title()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"method-set-dim-","dir":"Reference","previous_headings":"","what":"Method set_dim()","title":"PictureBlock ‚Äî PictureBlock","text":"Sets dimensions PictureBlock","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"PictureBlock ‚Äî PictureBlock","text":"","code":"PictureBlock$set_dim(dim)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"PictureBlock ‚Äî PictureBlock","text":"dim numeric figure dimensions (width height) pixels, length 2.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"PictureBlock ‚Äî PictureBlock","text":"self","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"examples-3","dir":"Reference","previous_headings":"","what":"Examples","title":"PictureBlock ‚Äî PictureBlock","text":"","code":"block <- teal.reporter:::PictureBlock$new() block$set_dim(c(800, 600))"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"method-get-dim-","dir":"Reference","previous_headings":"","what":"Method get_dim()","title":"PictureBlock ‚Äî PictureBlock","text":"Returns dimensions PictureBlock","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"PictureBlock ‚Äî PictureBlock","text":"","code":"PictureBlock$get_dim()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"PictureBlock ‚Äî PictureBlock","text":"numeric array 2 numeric values representing width height pixels.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"examples-4","dir":"Reference","previous_headings":"","what":"Examples","title":"PictureBlock ‚Äî PictureBlock","text":"","code":"block <- teal.reporter:::PictureBlock$new() block$get_dim()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"PictureBlock ‚Äî PictureBlock","text":"objects class cloneable method.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"PictureBlock ‚Äî PictureBlock","text":"","code":"PictureBlock$clone(deep = FALSE)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"PictureBlock ‚Äî PictureBlock","text":"deep Whether make deep clone.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/PictureBlock.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PictureBlock ‚Äî PictureBlock","text":"","code":"## ------------------------------------------------ ## Method `PictureBlock$set_content` ## ------------------------------------------------  block <- teal.reporter:::PictureBlock$new() block$set_content(ggplot2::ggplot(iris))  block <- teal.reporter:::PictureBlock$new() block$set_content(lattice::bwplot(1))  block <- teal.reporter:::PictureBlock$new() block$set_content(ggplot2::ggplotGrob(ggplot2::ggplot(iris)))  ## ------------------------------------------------ ## Method `PictureBlock$set_title` ## ------------------------------------------------  block <- teal.reporter:::PictureBlock$new() block$set_title(\"Title\")   ## ------------------------------------------------ ## Method `PictureBlock$get_title` ## ------------------------------------------------  block <- teal.reporter:::PictureBlock$new() block$get_title() #> [1] \"\"   ## ------------------------------------------------ ## Method `PictureBlock$set_dim` ## ------------------------------------------------  block <- teal.reporter:::PictureBlock$new() block$set_dim(c(800, 600))   ## ------------------------------------------------ ## Method `PictureBlock$get_dim` ## ------------------------------------------------  block <- teal.reporter:::PictureBlock$new() block$get_dim() #> [1] 800 600"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Renderer.html","id":null,"dir":"Reference","previous_headings":"","what":"Renderer ‚Äî Renderer","title":"Renderer ‚Äî Renderer","text":"Renderer Renderer","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Renderer.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Renderer ‚Äî Renderer","text":"Renderer$new() Renderer$finalize() Renderer$renderRmd() Renderer$render() Renderer$get_output_dir() Renderer$clone()","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Renderer.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Renderer ‚Äî Renderer","text":"Returns Renderer object.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Renderer.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Renderer ‚Äî Renderer","text":"","code":"Renderer$new()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Renderer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Renderer ‚Äî Renderer","text":"Returns Renderer object.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Renderer.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Renderer ‚Äî Renderer","text":"Renderer object.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Renderer.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Renderer ‚Äî Renderer","text":"","code":"renderer <- teal.reporter:::Renderer$new()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Renderer.html","id":"method-finalize-","dir":"Reference","previous_headings":"","what":"Method finalize()","title":"Renderer ‚Äî Renderer","text":"Finalizes Renderer object.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Renderer.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Renderer ‚Äî Renderer","text":"","code":"Renderer$finalize()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Renderer.html","id":"method-renderrmd-","dir":"Reference","previous_headings":"","what":"Method renderRmd()","title":"Renderer ‚Äî Renderer","text":"getting Rmd text easily rendered later.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Renderer.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Renderer ‚Äî Renderer","text":"","code":"Renderer$renderRmd(blocks, yaml_header)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Renderer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Renderer ‚Äî Renderer","text":"blocks list c(\"TextBlock\", \"PictureBlock\", \"NewpageBlock\") objects. yaml_header character rmarkdown yaml header.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Renderer.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Renderer ‚Äî Renderer","text":"character Rmd text (yaml header + body), ready rendered.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Renderer.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"Renderer ‚Äî Renderer","text":"","code":"card1 <- teal.reporter:::ReportCard$new()  card1$append_text(\"Header 2 text\", \"header2\") card1$append_text(\"A paragraph of default text\") card1$append_plot(  ggplot2::ggplot(iris, ggplot2::aes(x = Petal.Length)) + ggplot2::geom_histogram() )  card2 <- teal.reporter:::ReportCard$new()  card2$append_text(\"Header 2 text\", \"header2\") card2$append_text(\"A paragraph of default text\", \"header2\") lyt <- rtables::analyze(rtables::split_rows_by(rtables::basic_table(), \"Day\"), \"Ozone\", afun = mean) table_res2 <- rtables::build_table(lyt, airquality) card2$append_table(table_res2) card2$append_table(iris)  reporter <- teal.reporter:::Reporter$new() reporter$append_cards(list(card1, card2))  yaml_l <- list(   author = teal.reporter:::yaml_quoted(\"NEST\"),   title = teal.reporter:::yaml_quoted(\"Report\"),   date = teal.reporter:::yaml_quoted(\"07/04/2019\"),   output = list(html_document = list(toc = FALSE)) )  yaml_header <- teal.reporter:::md_header(yaml::as.yaml(yaml_l)) result_path <- teal.reporter:::Renderer$new()$renderRmd(reporter$get_blocks(), yaml_header)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Renderer.html","id":"method-render-","dir":"Reference","previous_headings":"","what":"Method render()","title":"Renderer ‚Äî Renderer","text":"Renders content Report output file","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Renderer.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Renderer ‚Äî Renderer","text":"","code":"Renderer$render(blocks, yaml_header, ...)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Renderer.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Renderer ‚Äî Renderer","text":"blocks list c(\"TextBlock\", \"PictureBlock\", \"NewpageBlock\") objects. yaml_header character rmarkdown yaml header. ... rmarkdown::render arguments, input output_dir updated.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Renderer.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Renderer ‚Äî Renderer","text":"character path output","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Renderer.html","id":"examples-2","dir":"Reference","previous_headings":"","what":"Examples","title":"Renderer ‚Äî Renderer","text":"","code":"card1 <- teal.reporter:::ReportCard$new() card1$append_text(\"Header 2 text\", \"header2\") card1$append_text(\"A paragraph of default text\") card1$append_plot(  ggplot2::ggplot(iris, ggplot2::aes(x = Petal.Length)) + ggplot2::geom_histogram() )  card2 <- teal.reporter:::ReportCard$new() card2$append_text(\"Header 2 text\", \"header2\") card2$append_text(\"A paragraph of default text\", \"header2\") lyt <- rtables::analyze(rtables::split_rows_by(rtables::basic_table(), \"Day\"), \"Ozone\", afun = mean) table_res2 <- rtables::build_table(lyt, airquality) card2$append_table(table_res2) card2$append_table(iris)  reporter <- teal.reporter:::Reporter$new() reporter$append_cards(list(card1, card2))  yaml_l <- list(   author = teal.reporter:::yaml_quoted(\"NEST\"),   title = teal.reporter:::yaml_quoted(\"Report\"),   date = teal.reporter:::yaml_quoted(\"07/04/2019\"),   output = list(html_document = list(toc = FALSE)) )  yaml_header <- teal.reporter:::md_header(yaml::as.yaml(yaml_l)) result_path <- teal.reporter:::Renderer$new()$render(reporter$get_blocks(), yaml_header)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Renderer.html","id":"method-get-output-dir-","dir":"Reference","previous_headings":"","what":"Method get_output_dir()","title":"Renderer ‚Äî Renderer","text":"get output_dir field","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Renderer.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Renderer ‚Äî Renderer","text":"","code":"Renderer$get_output_dir()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Renderer.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Renderer ‚Äî Renderer","text":"character output_dir field path.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Renderer.html","id":"examples-3","dir":"Reference","previous_headings":"","what":"Examples","title":"Renderer ‚Äî Renderer","text":"","code":"renderer <- teal.reporter:::Renderer$new() renderer$get_output_dir()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Renderer.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Renderer ‚Äî Renderer","text":"objects class cloneable method.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Renderer.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Renderer ‚Äî Renderer","text":"","code":"Renderer$clone(deep = FALSE)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Renderer.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Renderer ‚Äî Renderer","text":"deep Whether make deep clone.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Renderer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Renderer ‚Äî Renderer","text":"","code":"## ------------------------------------------------ ## Method `Renderer$new` ## ------------------------------------------------  renderer <- teal.reporter:::Renderer$new()  ## ------------------------------------------------ ## Method `Renderer$renderRmd` ## ------------------------------------------------  card1 <- teal.reporter:::ReportCard$new()  card1$append_text(\"Header 2 text\", \"header2\") card1$append_text(\"A paragraph of default text\") card1$append_plot(  ggplot2::ggplot(iris, ggplot2::aes(x = Petal.Length)) + ggplot2::geom_histogram() ) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.  card2 <- teal.reporter:::ReportCard$new()  card2$append_text(\"Header 2 text\", \"header2\") card2$append_text(\"A paragraph of default text\", \"header2\") lyt <- rtables::analyze(rtables::split_rows_by(rtables::basic_table(), \"Day\"), \"Ozone\", afun = mean) table_res2 <- rtables::build_table(lyt, airquality) #> Split var [Day] was not character or factor. Converting to factor card2$append_table(table_res2) card2$append_table(iris)  reporter <- teal.reporter:::Reporter$new() reporter$append_cards(list(card1, card2))  yaml_l <- list(   author = teal.reporter:::yaml_quoted(\"NEST\"),   title = teal.reporter:::yaml_quoted(\"Report\"),   date = teal.reporter:::yaml_quoted(\"07/04/2019\"),   output = list(html_document = list(toc = FALSE)) )  yaml_header <- teal.reporter:::md_header(yaml::as.yaml(yaml_l)) result_path <- teal.reporter:::Renderer$new()$renderRmd(reporter$get_blocks(), yaml_header)  ## ------------------------------------------------ ## Method `Renderer$render` ## ------------------------------------------------  card1 <- teal.reporter:::ReportCard$new() card1$append_text(\"Header 2 text\", \"header2\") card1$append_text(\"A paragraph of default text\") card1$append_plot(  ggplot2::ggplot(iris, ggplot2::aes(x = Petal.Length)) + ggplot2::geom_histogram() ) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.  card2 <- teal.reporter:::ReportCard$new() card2$append_text(\"Header 2 text\", \"header2\") card2$append_text(\"A paragraph of default text\", \"header2\") lyt <- rtables::analyze(rtables::split_rows_by(rtables::basic_table(), \"Day\"), \"Ozone\", afun = mean) table_res2 <- rtables::build_table(lyt, airquality) #> Split var [Day] was not character or factor. Converting to factor card2$append_table(table_res2) card2$append_table(iris)  reporter <- teal.reporter:::Reporter$new() reporter$append_cards(list(card1, card2))  yaml_l <- list(   author = teal.reporter:::yaml_quoted(\"NEST\"),   title = teal.reporter:::yaml_quoted(\"Report\"),   date = teal.reporter:::yaml_quoted(\"07/04/2019\"),   output = list(html_document = list(toc = FALSE)) )  yaml_header <- teal.reporter:::md_header(yaml::as.yaml(yaml_l)) result_path <- teal.reporter:::Renderer$new()$render(reporter$get_blocks(), yaml_header)  ## ------------------------------------------------ ## Method `Renderer$get_output_dir` ## ------------------------------------------------  renderer <- teal.reporter:::Renderer$new() renderer$get_output_dir() #> [1] \"/tmp/RtmpR2k74b/report_202206100655315521\""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":null,"dir":"Reference","previous_headings":"","what":"ReportCard ‚Äî ReportCard","title":"ReportCard ‚Äî ReportCard","text":"R6 class supports creating report card containing text, plot, table meta data blocks can appended rendered form report output shiny app.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"ReportCard ‚Äî ReportCard","text":"ReportCard$new() ReportCard$append_table() ReportCard$append_plot() ReportCard$append_text() ReportCard$get_content() ReportCard$append_metadata() ReportCard$get_chr_converters() ReportCard$get_name() ReportCard$set_name() ReportCard$clone()","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"ReportCard ‚Äî ReportCard","text":"Returns ReportCard object.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ReportCard ‚Äî ReportCard","text":"","code":"ReportCard$new()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"ReportCard ‚Äî ReportCard","text":"ReportCard object","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ReportCard ‚Äî ReportCard","text":"","code":"card <- ReportCard$new()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"method-append-table-","dir":"Reference","previous_headings":"","what":"Method append_table()","title":"ReportCard ‚Äî ReportCard","text":"Appends table ReportCard.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"ReportCard ‚Äî ReportCard","text":"","code":"ReportCard$append_table(table)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ReportCard ‚Äî ReportCard","text":"table appended table","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"ReportCard ‚Äî ReportCard","text":"invisibly self","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"ReportCard ‚Äî ReportCard","text":"","code":"card <- ReportCard$new()$append_table(iris)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"method-append-plot-","dir":"Reference","previous_headings":"","what":"Method append_plot()","title":"ReportCard ‚Äî ReportCard","text":"Appends plot ReportCard.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"ReportCard ‚Äî ReportCard","text":"","code":"ReportCard$append_plot(plot)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"ReportCard ‚Äî ReportCard","text":"plot appended plot","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"ReportCard ‚Äî ReportCard","text":"invisibly self","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"examples-2","dir":"Reference","previous_headings":"","what":"Examples","title":"ReportCard ‚Äî ReportCard","text":"","code":"card <- ReportCard$new()$append_plot(   ggplot2::ggplot(iris, ggplot2::aes(x = Petal.Length)) + ggplot2::geom_histogram() )"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"method-append-text-","dir":"Reference","previous_headings":"","what":"Method append_text()","title":"ReportCard ‚Äî ReportCard","text":"Appends paragraph text ReportCard.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"ReportCard ‚Äî ReportCard","text":"","code":"ReportCard$append_text(text, style = TextBlock$new()$get_available_styles()[1])"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"ReportCard ‚Äî ReportCard","text":"text (character(0) character(1)) text style (character(1)) style paragraph. One : default, header, verbatim","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"ReportCard ‚Äî ReportCard","text":"invisibly self","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"examples-3","dir":"Reference","previous_headings":"","what":"Examples","title":"ReportCard ‚Äî ReportCard","text":"","code":"card <- ReportCard$new()$append_text(\"A paragraph of default text\")"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"method-get-content-","dir":"Reference","previous_headings":"","what":"Method get_content()","title":"ReportCard ‚Äî ReportCard","text":"Returns content ReportCard.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"ReportCard ‚Äî ReportCard","text":"","code":"ReportCard$get_content(raw = FALSE)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"ReportCard ‚Äî ReportCard","text":"raw (logical) whether include content appended apply chr_converter functions meta data objects.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"ReportCard ‚Äî ReportCard","text":"list() list TableBlock, TextBlock PictureBlock. raw argument TRUE, meta data objects form added returned. Otherwise, given chr_converter function given applied objects. metadata elements named.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"examples-4","dir":"Reference","previous_headings":"","what":"Examples","title":"ReportCard ‚Äî ReportCard","text":"","code":"card <- ReportCard$new()$append_text(\"Some text\")$append_plot(   ggplot2::ggplot(iris, ggplot2::aes(x = Petal.Length)) + ggplot2::geom_histogram() )$append_metadata(\"rc\", \"a <- 2 + 2\")  card$get_content()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"method-append-metadata-","dir":"Reference","previous_headings":"","what":"Method append_metadata()","title":"ReportCard ‚Äî ReportCard","text":"Appends content elements ReportCard.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"ReportCard ‚Äî ReportCard","text":"","code":"ReportCard$append_metadata(key, value, chr_converter = deparse1)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"ReportCard ‚Äî ReportCard","text":"key (character(1)) name meta data. value value meta data. chr_converter (function) convert value character, default base::deparse1.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"ReportCard ‚Äî ReportCard","text":"invisibly self","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"examples-5","dir":"Reference","previous_headings":"","what":"Examples","title":"ReportCard ‚Äî ReportCard","text":"","code":"custom_lm_chr_converter <- function(x) paste(capture.output(summary(x)), collapse = \"\\\\n  \") card <- ReportCard$new()$append_text(\"Some text\")$append_plot(   ggplot2::ggplot(iris, ggplot2::aes(x = Petal.Length)) + ggplot2::geom_histogram() )$append_text(\"Some text\")$append_metadata(key = \"lm\",                   value = lm(Ozone ~ Solar.R, airquality),                   chr_converter = custom_lm_chr_converter) card$get_content() card$get_content(raw = TRUE)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"method-get-chr-converters-","dir":"Reference","previous_headings":"","what":"Method get_chr_converters()","title":"ReportCard ‚Äî ReportCard","text":"get chr_converter functions ReportCard.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"ReportCard ‚Äî ReportCard","text":"","code":"ReportCard$get_chr_converters()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"ReportCard ‚Äî ReportCard","text":"named list","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"examples-6","dir":"Reference","previous_headings":"","what":"Examples","title":"ReportCard ‚Äî ReportCard","text":"","code":"custom_lm_chr_converter <- function(x) paste(capture.output(summary(x)), collapse = \"\\\\n  \") card <- ReportCard$new()$append_text(\"Some text\")$append_plot(   ggplot2::ggplot(iris, ggplot2::aes(x = Petal.Length)) + ggplot2::geom_histogram() )$append_text(\"Some text\")$append_metadata(key = \"lm\",                   value = lm(Ozone ~ Solar.R, airquality),                   chr_converter = custom_lm_chr_converter )$append_metadata(key = \"code\", value = lm(Ozone ~ Solar.R, airquality)) card$get_chr_converters()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"method-get-name-","dir":"Reference","previous_headings":"","what":"Method get_name()","title":"ReportCard ‚Äî ReportCard","text":"get Card name","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"ReportCard ‚Äî ReportCard","text":"","code":"ReportCard$get_name()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"ReportCard ‚Äî ReportCard","text":"character Card name","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"examples-7","dir":"Reference","previous_headings":"","what":"Examples","title":"ReportCard ‚Äî ReportCard","text":"","code":"ReportCard$new()$set_name(\"NAME\")$get_name()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"method-set-name-","dir":"Reference","previous_headings":"","what":"Method set_name()","title":"ReportCard ‚Äî ReportCard","text":"set Card name","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"ReportCard ‚Äî ReportCard","text":"","code":"ReportCard$set_name(name)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"ReportCard ‚Äî ReportCard","text":"name character Card name","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"ReportCard ‚Äî ReportCard","text":"invisibly self","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"examples-8","dir":"Reference","previous_headings":"","what":"Examples","title":"ReportCard ‚Äî ReportCard","text":"","code":"ReportCard$new()$set_name(\"NAME\")$get_name()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"ReportCard ‚Äî ReportCard","text":"objects class cloneable method.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"ReportCard ‚Äî ReportCard","text":"","code":"ReportCard$clone(deep = FALSE)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"ReportCard ‚Äî ReportCard","text":"deep Whether make deep clone.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/ReportCard.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ReportCard ‚Äî ReportCard","text":"","code":"## ------------------------------------------------ ## Method `ReportCard$new` ## ------------------------------------------------  card <- ReportCard$new()   ## ------------------------------------------------ ## Method `ReportCard$append_table` ## ------------------------------------------------  card <- ReportCard$new()$append_table(iris)   ## ------------------------------------------------ ## Method `ReportCard$append_plot` ## ------------------------------------------------  card <- ReportCard$new()$append_plot(   ggplot2::ggplot(iris, ggplot2::aes(x = Petal.Length)) + ggplot2::geom_histogram() ) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.   ## ------------------------------------------------ ## Method `ReportCard$append_text` ## ------------------------------------------------  card <- ReportCard$new()$append_text(\"A paragraph of default text\")   ## ------------------------------------------------ ## Method `ReportCard$get_content` ## ------------------------------------------------  card <- ReportCard$new()$append_text(\"Some text\")$append_plot(   ggplot2::ggplot(iris, ggplot2::aes(x = Petal.Length)) + ggplot2::geom_histogram() )$append_metadata(\"rc\", \"a <- 2 + 2\") #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.  card$get_content() #> [[1]] #> <TextBlock> #>   Inherits from: <ContentBlock> #>   Public: #>     clone: function (deep = FALSE)  #>     get_available_styles: function ()  #>     get_content: function ()  #>     get_style: function ()  #>     initialize: function (content = character(0), style = private$styles[1])  #>     set_content: function (content)  #>     set_style: function (style)  #>   Private: #>     content: Some text #>     deep_clone: function (name, value)  #>     style: default #>     styles: default header2 header3 verbatim #>  #> [[2]] #> <PictureBlock> #>   Inherits from: <ContentBlock> #>   Public: #>     clone: function (deep = FALSE)  #>     finalize: function ()  #>     get_content: function ()  #>     get_dim: function ()  #>     get_title: function ()  #>     initialize: function (plot)  #>     set_content: function (content)  #>     set_dim: function (dim)  #>     set_title: function (title)  #>   Private: #>     content: /tmp/RtmpR2k74b/file19ac550f7b.png #>     deep_clone: function (name, value)  #>     dim: 800 600 #>     supported_plots: ggplot grob trellis #>     title:  #>     type:  #>  #> [[3]] #> <TextBlock> #>   Inherits from: <ContentBlock> #>   Public: #>     clone: function (deep = FALSE)  #>     get_available_styles: function ()  #>     get_content: function ()  #>     get_style: function ()  #>     initialize: function (content = character(0), style = private$styles[1])  #>     set_content: function (content)  #>     set_style: function (style)  #>   Private: #>     content: \"a <- 2 + 2\" #>     deep_clone: function (name, value)  #>     style: default #>     styles: default header2 header3 verbatim #>    ## ------------------------------------------------ ## Method `ReportCard$append_metadata` ## ------------------------------------------------  custom_lm_chr_converter <- function(x) paste(capture.output(summary(x)), collapse = \"\\\\n  \") card <- ReportCard$new()$append_text(\"Some text\")$append_plot(   ggplot2::ggplot(iris, ggplot2::aes(x = Petal.Length)) + ggplot2::geom_histogram() )$append_text(\"Some text\")$append_metadata(key = \"lm\",                   value = lm(Ozone ~ Solar.R, airquality),                   chr_converter = custom_lm_chr_converter) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. card$get_content() #> [[1]] #> <TextBlock> #>   Inherits from: <ContentBlock> #>   Public: #>     clone: function (deep = FALSE)  #>     get_available_styles: function ()  #>     get_content: function ()  #>     get_style: function ()  #>     initialize: function (content = character(0), style = private$styles[1])  #>     set_content: function (content)  #>     set_style: function (style)  #>   Private: #>     content: Some text #>     deep_clone: function (name, value)  #>     style: default #>     styles: default header2 header3 verbatim #>  #> [[2]] #> <PictureBlock> #>   Inherits from: <ContentBlock> #>   Public: #>     clone: function (deep = FALSE)  #>     finalize: function ()  #>     get_content: function ()  #>     get_dim: function ()  #>     get_title: function ()  #>     initialize: function (plot)  #>     set_content: function (content)  #>     set_dim: function (dim)  #>     set_title: function (title)  #>   Private: #>     content: /tmp/RtmpR2k74b/file19a5207fdbc.png #>     deep_clone: function (name, value)  #>     dim: 800 600 #>     supported_plots: ggplot grob trellis #>     title:  #>     type:  #>  #> [[3]] #> <TextBlock> #>   Inherits from: <ContentBlock> #>   Public: #>     clone: function (deep = FALSE)  #>     get_available_styles: function ()  #>     get_content: function ()  #>     get_style: function ()  #>     initialize: function (content = character(0), style = private$styles[1])  #>     set_content: function (content)  #>     set_style: function (style)  #>   Private: #>     content: Some text #>     deep_clone: function (name, value)  #>     style: default #>     styles: default header2 header3 verbatim #>  #> [[4]] #> <TextBlock> #>   Inherits from: <ContentBlock> #>   Public: #>     clone: function (deep = FALSE)  #>     get_available_styles: function ()  #>     get_content: function ()  #>     get_style: function ()  #>     initialize: function (content = character(0), style = private$styles[1])  #>     set_content: function (content)  #>     set_style: function (style)  #>   Private: #>     content: \\n  Call:\\n  lm(formula = Ozone ~ Solar.R, data = airqua ... #>     deep_clone: function (name, value)  #>     style: default #>     styles: default header2 header3 verbatim #>  card$get_content(raw = TRUE) #> [[1]] #> <TextBlock> #>   Inherits from: <ContentBlock> #>   Public: #>     clone: function (deep = FALSE)  #>     get_available_styles: function ()  #>     get_content: function ()  #>     get_style: function ()  #>     initialize: function (content = character(0), style = private$styles[1])  #>     set_content: function (content)  #>     set_style: function (style)  #>   Private: #>     content: Some text #>     deep_clone: function (name, value)  #>     style: default #>     styles: default header2 header3 verbatim #>  #> [[2]] #> <PictureBlock> #>   Inherits from: <ContentBlock> #>   Public: #>     clone: function (deep = FALSE)  #>     finalize: function ()  #>     get_content: function ()  #>     get_dim: function ()  #>     get_title: function ()  #>     initialize: function (plot)  #>     set_content: function (content)  #>     set_dim: function (dim)  #>     set_title: function (title)  #>   Private: #>     content: /tmp/RtmpR2k74b/file19a5207fdbc.png #>     deep_clone: function (name, value)  #>     dim: 800 600 #>     supported_plots: ggplot grob trellis #>     title:  #>     type:  #>  #> [[3]] #> <TextBlock> #>   Inherits from: <ContentBlock> #>   Public: #>     clone: function (deep = FALSE)  #>     get_available_styles: function ()  #>     get_content: function ()  #>     get_style: function ()  #>     initialize: function (content = character(0), style = private$styles[1])  #>     set_content: function (content)  #>     set_style: function (style)  #>   Private: #>     content: Some text #>     deep_clone: function (name, value)  #>     style: default #>     styles: default header2 header3 verbatim #>  #> $lm #>  #> Call: #> lm(formula = Ozone ~ Solar.R, data = airquality) #>  #> Coefficients: #> (Intercept)      Solar.R   #>     18.5987       0.1272   #>  #>    ## ------------------------------------------------ ## Method `ReportCard$get_chr_converters` ## ------------------------------------------------  custom_lm_chr_converter <- function(x) paste(capture.output(summary(x)), collapse = \"\\\\n  \") card <- ReportCard$new()$append_text(\"Some text\")$append_plot(   ggplot2::ggplot(iris, ggplot2::aes(x = Petal.Length)) + ggplot2::geom_histogram() )$append_text(\"Some text\")$append_metadata(key = \"lm\",                   value = lm(Ozone ~ Solar.R, airquality),                   chr_converter = custom_lm_chr_converter )$append_metadata(key = \"code\", value = lm(Ozone ~ Solar.R, airquality)) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. card$get_chr_converters() #> $lm #> function(x) paste(capture.output(summary(x)), collapse = \"\\\\n  \") #> <environment: 0x55a200d03db0> #>  #> $code #> function (expr, collapse = \" \", width.cutoff = 500L, ...)  #> paste(deparse(expr, width.cutoff, ...), collapse = collapse) #> <bytecode: 0x55a1f80dc100> #> <environment: namespace:base> #>    ## ------------------------------------------------ ## Method `ReportCard$get_name` ## ------------------------------------------------  ReportCard$new()$set_name(\"NAME\")$get_name() #> [1] \"NAME\"  ## ------------------------------------------------ ## Method `ReportCard$set_name` ## ------------------------------------------------  ReportCard$new()$set_name(\"NAME\")$get_name() #> [1] \"NAME\""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":null,"dir":"Reference","previous_headings":"","what":"Reporter ‚Äî Reporter","title":"Reporter ‚Äî Reporter","text":"R6 class stores manages report cards.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Reporter ‚Äî Reporter","text":"function used shiny reactive context.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Reporter ‚Äî Reporter","text":"Reporter$new() Reporter$append_cards() Reporter$get_cards() Reporter$get_blocks() Reporter$reset() Reporter$remove_cards() Reporter$swap_cards() Reporter$get_reactive_add_card() Reporter$clone()","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Reporter ‚Äî Reporter","text":"Returns Reporter object.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reporter ‚Äî Reporter","text":"","code":"Reporter$new()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Reporter ‚Äî Reporter","text":"Reporter object","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reporter ‚Äî Reporter","text":"","code":"reporter <- teal.reporter:::Reporter$new()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"method-append-cards-","dir":"Reference","previous_headings":"","what":"Method append_cards()","title":"Reporter ‚Äî Reporter","text":"Appends table Reporter.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Reporter ‚Äî Reporter","text":"","code":"Reporter$append_cards(cards)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reporter ‚Äî Reporter","text":"cards ReportCard list objects","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Reporter ‚Äî Reporter","text":"invisibly self","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"Reporter ‚Äî Reporter","text":"","code":"card1 <- teal.reporter:::ReportCard$new()  card1$append_text(\"Header 2 text\", \"header2\") card1$append_text(\"A paragraph of default text\", \"header2\") card1$append_plot(  ggplot2::ggplot(iris, ggplot2::aes(x = Petal.Length)) + ggplot2::geom_histogram() )  card2 <- teal.reporter:::ReportCard$new()  card2$append_text(\"Header 2 text\", \"header2\") card2$append_text(\"A paragraph of default text\", \"header2\") lyt <- rtables::analyze(rtables::split_rows_by(rtables::basic_table(), \"Day\"), \"Ozone\", afun = mean) table_res2 <- rtables::build_table(lyt, airquality) card2$append_table(table_res2) card2$append_table(iris)  reporter <- teal.reporter:::Reporter$new() reporter$append_cards(list(card1, card2))"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"method-get-cards-","dir":"Reference","previous_headings":"","what":"Method get_cards()","title":"Reporter ‚Äî Reporter","text":"Returns cards Reporter.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Reporter ‚Äî Reporter","text":"","code":"Reporter$get_cards()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Reporter ‚Äî Reporter","text":"list() list ReportCard","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"examples-2","dir":"Reference","previous_headings":"","what":"Examples","title":"Reporter ‚Äî Reporter","text":"","code":"card1 <- teal.reporter:::ReportCard$new()  card1$append_text(\"Header 2 text\", \"header2\") card1$append_text(\"A paragraph of default text\", \"header2\") card1$append_plot(  ggplot2::ggplot(iris, ggplot2::aes(x = Petal.Length)) + ggplot2::geom_histogram() )  card2 <- teal.reporter:::ReportCard$new()  card2$append_text(\"Header 2 text\", \"header2\") card2$append_text(\"A paragraph of default text\", \"header2\") lyt <- rtables::analyze(rtables::split_rows_by(rtables::basic_table(), \"Day\"), \"Ozone\", afun = mean) table_res2 <- rtables::build_table(lyt, airquality) card2$append_table(table_res2) card2$append_table(iris)  reporter <- teal.reporter:::Reporter$new() reporter$append_cards(list(card1, card2)) reporter$get_cards()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"method-get-blocks-","dir":"Reference","previous_headings":"","what":"Method get_blocks()","title":"Reporter ‚Äî Reporter","text":"Returns blocks ReportCard Reporter.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Reporter ‚Äî Reporter","text":"","code":"Reporter$get_blocks(sep = NewpageBlock$new())"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reporter ‚Äî Reporter","text":"sep element inserted content element Reporter. Pass NULL return content without additional elements. Default: NewpageBlock$new()","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Reporter ‚Äî Reporter","text":"list() list TableBlock, TextBlock, PictureBlock NewpageBlock","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"examples-3","dir":"Reference","previous_headings":"","what":"Examples","title":"Reporter ‚Äî Reporter","text":"","code":"card1 <- teal.reporter:::ReportCard$new()  card1$append_text(\"Header 2 text\", \"header2\") card1$append_text(\"A paragraph of default text\", \"header2\") card1$append_plot(  ggplot2::ggplot(iris, ggplot2::aes(x = Petal.Length)) + ggplot2::geom_histogram() )  card2 <- teal.reporter:::ReportCard$new()  card2$append_text(\"Header 2 text\", \"header2\") card2$append_text(\"A paragraph of default text\", \"header2\") lyt <- rtables::analyze(rtables::split_rows_by(rtables::basic_table(), \"Day\"), \"Ozone\", afun = mean) table_res2 <- rtables::build_table(lyt, airquality) card2$append_table(table_res2) card2$append_table(iris)  reporter <- teal.reporter:::Reporter$new() reporter$append_cards(list(card1, card2)) reporter$get_blocks()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"method-reset-","dir":"Reference","previous_headings":"","what":"Method reset()","title":"Reporter ‚Äî Reporter","text":"Removes ReportCard objects added Reporter.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Reporter ‚Äî Reporter","text":"","code":"Reporter$reset()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Reporter ‚Äî Reporter","text":"invisibly self","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"method-remove-cards-","dir":"Reference","previous_headings":"","what":"Method remove_cards()","title":"Reporter ‚Äî Reporter","text":"remove specific Card Reporter","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Reporter ‚Äî Reporter","text":"","code":"Reporter$remove_cards(ids = NULL)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reporter ‚Äî Reporter","text":"ids integer indexes cards","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Reporter ‚Äî Reporter","text":"invisibly self","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"method-swap-cards-","dir":"Reference","previous_headings":"","what":"Method swap_cards()","title":"Reporter ‚Äî Reporter","text":"swap two cards Reporter","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Reporter ‚Äî Reporter","text":"","code":"Reporter$swap_cards(start, end)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reporter ‚Äî Reporter","text":"start integer index first card end integer index second card","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"Reporter ‚Äî Reporter","text":"invisibly self","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"method-get-reactive-add-card-","dir":"Reference","previous_headings":"","what":"Method get_reactive_add_card()","title":"Reporter ‚Äî Reporter","text":"get value reactive value add card","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Reporter ‚Äî Reporter","text":"","code":"Reporter$get_reactive_add_card()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"Reporter ‚Äî Reporter","text":"reactive_add_card filed value","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"examples-4","dir":"Reference","previous_headings":"","what":"Examples","title":"Reporter ‚Äî Reporter","text":"","code":"shiny::isolate(Reporter$new()$get_reactive_add_card())"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Reporter ‚Äî Reporter","text":"objects class cloneable method.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Reporter ‚Äî Reporter","text":"","code":"Reporter$clone(deep = FALSE)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reporter ‚Äî Reporter","text":"deep Whether make deep clone.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/Reporter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reporter ‚Äî Reporter","text":"","code":"## ------------------------------------------------ ## Method `Reporter$new` ## ------------------------------------------------  reporter <- teal.reporter:::Reporter$new()   ## ------------------------------------------------ ## Method `Reporter$append_cards` ## ------------------------------------------------  card1 <- teal.reporter:::ReportCard$new()  card1$append_text(\"Header 2 text\", \"header2\") card1$append_text(\"A paragraph of default text\", \"header2\") card1$append_plot(  ggplot2::ggplot(iris, ggplot2::aes(x = Petal.Length)) + ggplot2::geom_histogram() ) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.  card2 <- teal.reporter:::ReportCard$new()  card2$append_text(\"Header 2 text\", \"header2\") card2$append_text(\"A paragraph of default text\", \"header2\") lyt <- rtables::analyze(rtables::split_rows_by(rtables::basic_table(), \"Day\"), \"Ozone\", afun = mean) table_res2 <- rtables::build_table(lyt, airquality) #> Split var [Day] was not character or factor. Converting to factor card2$append_table(table_res2) card2$append_table(iris)  reporter <- teal.reporter:::Reporter$new() reporter$append_cards(list(card1, card2))   ## ------------------------------------------------ ## Method `Reporter$get_cards` ## ------------------------------------------------  card1 <- teal.reporter:::ReportCard$new()  card1$append_text(\"Header 2 text\", \"header2\") card1$append_text(\"A paragraph of default text\", \"header2\") card1$append_plot(  ggplot2::ggplot(iris, ggplot2::aes(x = Petal.Length)) + ggplot2::geom_histogram() ) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.  card2 <- teal.reporter:::ReportCard$new()  card2$append_text(\"Header 2 text\", \"header2\") card2$append_text(\"A paragraph of default text\", \"header2\") lyt <- rtables::analyze(rtables::split_rows_by(rtables::basic_table(), \"Day\"), \"Ozone\", afun = mean) table_res2 <- rtables::build_table(lyt, airquality) #> Split var [Day] was not character or factor. Converting to factor card2$append_table(table_res2) card2$append_table(iris)  reporter <- teal.reporter:::Reporter$new() reporter$append_cards(list(card1, card2)) reporter$get_cards() #> [[1]] #> <ReportCard> #>   Public: #>     append_metadata: function (key, value, chr_converter = deparse1)  #>     append_plot: function (plot)  #>     append_table: function (table)  #>     append_text: function (text, style = TextBlock$new()$get_available_styles()[1])  #>     clone: function (deep = FALSE)  #>     get_chr_converters: function ()  #>     get_content: function (raw = FALSE)  #>     get_name: function ()  #>     initialize: function ()  #>     set_name: function (name)  #>   Private: #>     chr_converters: list #>     content: list #>     deep_clone: function (name, value)  #>     name:  #>  #> [[2]] #> <ReportCard> #>   Public: #>     append_metadata: function (key, value, chr_converter = deparse1)  #>     append_plot: function (plot)  #>     append_table: function (table)  #>     append_text: function (text, style = TextBlock$new()$get_available_styles()[1])  #>     clone: function (deep = FALSE)  #>     get_chr_converters: function ()  #>     get_content: function (raw = FALSE)  #>     get_name: function ()  #>     initialize: function ()  #>     set_name: function (name)  #>   Private: #>     chr_converters: list #>     content: list #>     deep_clone: function (name, value)  #>     name:  #>   ## ------------------------------------------------ ## Method `Reporter$get_blocks` ## ------------------------------------------------  card1 <- teal.reporter:::ReportCard$new()  card1$append_text(\"Header 2 text\", \"header2\") card1$append_text(\"A paragraph of default text\", \"header2\") card1$append_plot(  ggplot2::ggplot(iris, ggplot2::aes(x = Petal.Length)) + ggplot2::geom_histogram() ) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.  card2 <- teal.reporter:::ReportCard$new()  card2$append_text(\"Header 2 text\", \"header2\") card2$append_text(\"A paragraph of default text\", \"header2\") lyt <- rtables::analyze(rtables::split_rows_by(rtables::basic_table(), \"Day\"), \"Ozone\", afun = mean) table_res2 <- rtables::build_table(lyt, airquality) #> Split var [Day] was not character or factor. Converting to factor card2$append_table(table_res2) card2$append_table(iris)  reporter <- teal.reporter:::Reporter$new() reporter$append_cards(list(card1, card2)) reporter$get_blocks() #> [[1]] #> <TextBlock> #>   Inherits from: <ContentBlock> #>   Public: #>     clone: function (deep = FALSE)  #>     get_available_styles: function ()  #>     get_content: function ()  #>     get_style: function ()  #>     initialize: function (content = character(0), style = private$styles[1])  #>     set_content: function (content)  #>     set_style: function (style)  #>   Private: #>     content: Header 2 text #>     deep_clone: function (name, value)  #>     style: header2 #>     styles: default header2 header3 verbatim #>  #> [[2]] #> <TextBlock> #>   Inherits from: <ContentBlock> #>   Public: #>     clone: function (deep = FALSE)  #>     get_available_styles: function ()  #>     get_content: function ()  #>     get_style: function ()  #>     initialize: function (content = character(0), style = private$styles[1])  #>     set_content: function (content)  #>     set_style: function (style)  #>   Private: #>     content: A paragraph of default text #>     deep_clone: function (name, value)  #>     style: header2 #>     styles: default header2 header3 verbatim #>  #> [[3]] #> <PictureBlock> #>   Inherits from: <ContentBlock> #>   Public: #>     clone: function (deep = FALSE)  #>     finalize: function ()  #>     get_content: function ()  #>     get_dim: function ()  #>     get_title: function ()  #>     initialize: function (plot)  #>     set_content: function (content)  #>     set_dim: function (dim)  #>     set_title: function (title)  #>   Private: #>     content: /tmp/RtmpR2k74b/file19a34c51e5f.png #>     deep_clone: function (name, value)  #>     dim: 800 600 #>     supported_plots: ggplot grob trellis #>     title:  #>     type:  #>  #> [[4]] #> <NewpageBlock> #>   Inherits from: <ContentBlock> #>   Public: #>     clone: function (deep = FALSE)  #>     get_content: function ()  #>     initialize: function ()  #>     set_content: function (content)  #>   Private: #>     content:  #>     \\newpage #>  #>     deep_clone: function (name, value)  #>  #> [[5]] #> <TextBlock> #>   Inherits from: <ContentBlock> #>   Public: #>     clone: function (deep = FALSE)  #>     get_available_styles: function ()  #>     get_content: function ()  #>     get_style: function ()  #>     initialize: function (content = character(0), style = private$styles[1])  #>     set_content: function (content)  #>     set_style: function (style)  #>   Private: #>     content: Header 2 text #>     deep_clone: function (name, value)  #>     style: header2 #>     styles: default header2 header3 verbatim #>  #> [[6]] #> <TextBlock> #>   Inherits from: <ContentBlock> #>   Public: #>     clone: function (deep = FALSE)  #>     get_available_styles: function ()  #>     get_content: function ()  #>     get_style: function ()  #>     initialize: function (content = character(0), style = private$styles[1])  #>     set_content: function (content)  #>     set_style: function (style)  #>   Private: #>     content: A paragraph of default text #>     deep_clone: function (name, value)  #>     style: header2 #>     styles: default header2 header3 verbatim #>  #> [[7]] #> <TableBlock> #>   Inherits from: <ContentBlock> #>   Public: #>     clone: function (deep = FALSE)  #>     finalize: function ()  #>     get_content: function ()  #>     initialize: function (table)  #>     set_content: function (content)  #>   Private: #>     content: /tmp/RtmpR2k74b/file19a6082ce8c.rds #>     deep_clone: function (name, value)  #>     supported_tables: data.frame rtables TableTree #>  #> [[8]] #> <TableBlock> #>   Inherits from: <ContentBlock> #>   Public: #>     clone: function (deep = FALSE)  #>     finalize: function ()  #>     get_content: function ()  #>     initialize: function (table)  #>     set_content: function (content)  #>   Private: #>     content: /tmp/RtmpR2k74b/file19a24f0e5c5.rds #>     deep_clone: function (name, value)  #>     supported_tables: data.frame rtables TableTree #>    ## ------------------------------------------------ ## Method `Reporter$get_reactive_add_card` ## ------------------------------------------------  shiny::isolate(Reporter$new()$get_reactive_add_card()) #> [1] 0"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TableBlock.html","id":null,"dir":"Reference","previous_headings":"","what":"TableBlock ‚Äî TableBlock","title":"TableBlock ‚Äî TableBlock","text":"TableBlock TableBlock","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TableBlock.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"TableBlock ‚Äî TableBlock","text":"teal.reporter::ContentBlock -> TableBlock","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TableBlock.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"TableBlock ‚Äî TableBlock","text":"teal.reporter::ContentBlock$get_content()","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TableBlock.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"TableBlock ‚Äî TableBlock","text":"TableBlock$new() TableBlock$set_content() TableBlock$finalize() TableBlock$clone()","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TableBlock.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"TableBlock ‚Äî TableBlock","text":"Returns new TableBlock object","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TableBlock.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TableBlock ‚Äî TableBlock","text":"","code":"TableBlock$new(table)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TableBlock.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TableBlock ‚Äî TableBlock","text":"table (data.frame, DT, rtables, TableTree) table assigned TableBlock","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TableBlock.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"TableBlock ‚Äî TableBlock","text":"TableBlock object","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TableBlock.html","id":"method-set-content-","dir":"Reference","previous_headings":"","what":"Method set_content()","title":"TableBlock ‚Äî TableBlock","text":"Sets content TableBlock.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TableBlock.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"TableBlock ‚Äî TableBlock","text":"","code":"TableBlock$set_content(content)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TableBlock.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"TableBlock ‚Äî TableBlock","text":"content (data.frame, rtables) table assigned TableBlock","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TableBlock.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"TableBlock ‚Äî TableBlock","text":"throws argument table-like object.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TableBlock.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"TableBlock ‚Äî TableBlock","text":"invisibly self","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TableBlock.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TableBlock ‚Äî TableBlock","text":"","code":"block <- teal.reporter:::TableBlock$new() block$set_content(iris)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TableBlock.html","id":"method-finalize-","dir":"Reference","previous_headings":"","what":"Method finalize()","title":"TableBlock ‚Äî TableBlock","text":"finalize TableBlock.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TableBlock.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"TableBlock ‚Äî TableBlock","text":"","code":"TableBlock$finalize()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TableBlock.html","id":"details-1","dir":"Reference","previous_headings":"","what":"Details","title":"TableBlock ‚Äî TableBlock","text":"Removes temporary file created constructor.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TableBlock.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"TableBlock ‚Äî TableBlock","text":"objects class cloneable method.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TableBlock.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"TableBlock ‚Äî TableBlock","text":"","code":"TableBlock$clone(deep = FALSE)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TableBlock.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"TableBlock ‚Äî TableBlock","text":"deep Whether make deep clone.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TableBlock.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TableBlock ‚Äî TableBlock","text":"","code":"## ------------------------------------------------ ## Method `TableBlock$set_content` ## ------------------------------------------------  block <- teal.reporter:::TableBlock$new() block$set_content(iris)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TealReportCard.html","id":null,"dir":"Reference","previous_headings":"","what":"TealReportCard ‚Äî TealReportCard","title":"TealReportCard ‚Äî TealReportCard","text":"child ReportCard used teal specific applications. addition parent methods, supports rendering teal specific elements source code, encodings panel content filter panel content part meta data.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TealReportCard.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"TealReportCard ‚Äî TealReportCard","text":"teal.reporter::ReportCard -> TealReportCard","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TealReportCard.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"TealReportCard ‚Äî TealReportCard","text":"teal.reporter::ReportCard$append_metadata() teal.reporter::ReportCard$append_plot() teal.reporter::ReportCard$append_table() teal.reporter::ReportCard$append_text() teal.reporter::ReportCard$get_chr_converters() teal.reporter::ReportCard$get_content() teal.reporter::ReportCard$get_name() teal.reporter::ReportCard$initialize() teal.reporter::ReportCard$set_name()","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TealReportCard.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"TealReportCard ‚Äî TealReportCard","text":"TealReportCard$append_src() TealReportCard$append_fs() TealReportCard$append_encodings() TealReportCard$clone()","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TealReportCard.html","id":"method-append-src-","dir":"Reference","previous_headings":"","what":"Method append_src()","title":"TealReportCard ‚Äî TealReportCard","text":"Appends source code content meta data TealReportCard.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TealReportCard.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TealReportCard ‚Äî TealReportCard","text":"","code":"TealReportCard$append_src(   src,   chr_converter = function(x) paste0(\"```\\n\", paste(x, collapse = \"\\n\"), \"\\n```\\n\") )"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TealReportCard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TealReportCard ‚Äî TealReportCard","text":"src (character(1)) code text. chr_converter (function) convert src argument string, default function(x) paste0(\"```\\n\", paste(x, collapse = \"\\n\"), \"\\n```\\n\").","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TealReportCard.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"TealReportCard ‚Äî TealReportCard","text":"invisibly self","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TealReportCard.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TealReportCard ‚Äî TealReportCard","text":"","code":"card <- TealReportCard$new()$append_src(   \"ggplot2::ggplot(iris, ggplot2::aes(x = Petal.Length)) + ggplot2::geom_histogram()\" ) card$get_content()[[1]]$get_content()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TealReportCard.html","id":"method-append-fs-","dir":"Reference","previous_headings":"","what":"Method append_fs()","title":"TealReportCard ‚Äî TealReportCard","text":"Appends filter state list content meta data  TealReportCard.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TealReportCard.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"TealReportCard ‚Äî TealReportCard","text":"","code":"TealReportCard$append_fs(fs, chr_converter = deparse1)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TealReportCard.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"TealReportCard ‚Äî TealReportCard","text":"fs (list) list filter states. chr_converter (function) convert fs argument string, default base::deparse1.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TealReportCard.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"TealReportCard ‚Äî TealReportCard","text":"invisibly self","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TealReportCard.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"TealReportCard ‚Äî TealReportCard","text":"","code":"card <- TealReportCard$new()$append_fs(   list(data = list(X = list(selected = c(1, 10)))) ) card$get_content()[[1]]$get_content()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TealReportCard.html","id":"method-append-encodings-","dir":"Reference","previous_headings":"","what":"Method append_encodings()","title":"TealReportCard ‚Äî TealReportCard","text":"Appends encodings list content meta data TealReportCard.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TealReportCard.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"TealReportCard ‚Äî TealReportCard","text":"","code":"TealReportCard$append_encodings(encodings, chr_converter = deparse1)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TealReportCard.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"TealReportCard ‚Äî TealReportCard","text":"encodings (list) list encodings selections teal app. chr_converter (function) convert encodings string, default base::deparse1.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TealReportCard.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"TealReportCard ‚Äî TealReportCard","text":"invisibly self","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TealReportCard.html","id":"examples-2","dir":"Reference","previous_headings":"","what":"Examples","title":"TealReportCard ‚Äî TealReportCard","text":"","code":"card <- TealReportCard$new()$append_encodings(list(\"variable 1 is X\")) card$get_content()[[1]]$get_content()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TealReportCard.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"TealReportCard ‚Äî TealReportCard","text":"objects class cloneable method.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TealReportCard.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"TealReportCard ‚Äî TealReportCard","text":"","code":"TealReportCard$clone(deep = FALSE)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TealReportCard.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"TealReportCard ‚Äî TealReportCard","text":"deep Whether make deep clone.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TealReportCard.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TealReportCard ‚Äî TealReportCard","text":"","code":"## ------------------------------------------------ ## Method `TealReportCard$append_src` ## ------------------------------------------------  card <- TealReportCard$new()$append_src(   \"ggplot2::ggplot(iris, ggplot2::aes(x = Petal.Length)) + ggplot2::geom_histogram()\" ) card$get_content()[[1]]$get_content() #> [1] \"```\\nggplot2::ggplot(iris, ggplot2::aes(x = Petal.Length)) + ggplot2::geom_histogram()\\n```\\n\"  ## ------------------------------------------------ ## Method `TealReportCard$append_fs` ## ------------------------------------------------  card <- TealReportCard$new()$append_fs(   list(data = list(X = list(selected = c(1, 10)))) ) card$get_content()[[1]]$get_content() #> [1] \"list(data = list(X = list(selected = c(1, 10))))\"   ## ------------------------------------------------ ## Method `TealReportCard$append_encodings` ## ------------------------------------------------  card <- TealReportCard$new()$append_encodings(list(\"variable 1 is X\")) card$get_content()[[1]]$get_content() #> [1] \"list(\\\"variable 1 is X\\\")\""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TextBlock.html","id":null,"dir":"Reference","previous_headings":"","what":"TextBlock ‚Äî TextBlock","title":"TextBlock ‚Äî TextBlock","text":"TextBlock TextBlock","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TextBlock.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"TextBlock ‚Äî TextBlock","text":"teal.reporter::ContentBlock -> TextBlock","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TextBlock.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"TextBlock ‚Äî TextBlock","text":"teal.reporter::ContentBlock$get_content() teal.reporter::ContentBlock$set_content()","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TextBlock.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"TextBlock ‚Äî TextBlock","text":"TextBlock$new() TextBlock$set_style() TextBlock$get_style() TextBlock$get_available_styles() TextBlock$clone()","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TextBlock.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"TextBlock ‚Äî TextBlock","text":"Returns TextBlock object.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TextBlock.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TextBlock ‚Äî TextBlock","text":"","code":"TextBlock$new(content = character(0), style = private$styles[1])"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TextBlock.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TextBlock ‚Äî TextBlock","text":"content (character(1) character(0)) string assigned TextBlock style (character(1)) one : \"default\", \"header2\", \"header3\" \"verbatim\"","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TextBlock.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"TextBlock ‚Äî TextBlock","text":"Returns TextBlock object content default style.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TextBlock.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"TextBlock ‚Äî TextBlock","text":"TextBlock","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TextBlock.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TextBlock ‚Äî TextBlock","text":"","code":"block <- teal.reporter:::TextBlock$new()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TextBlock.html","id":"method-set-style-","dir":"Reference","previous_headings":"","what":"Method set_style()","title":"TextBlock ‚Äî TextBlock","text":"Sets style TextBlock.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TextBlock.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"TextBlock ‚Äî TextBlock","text":"","code":"TextBlock$set_style(style)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TextBlock.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"TextBlock ‚Äî TextBlock","text":"style (character(1)) one : \"default\", \"header2\", \"header3\" \"verbatim\"","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TextBlock.html","id":"details-1","dir":"Reference","previous_headings":"","what":"Details","title":"TextBlock ‚Äî TextBlock","text":"style bearing rendering block.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TextBlock.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"TextBlock ‚Äî TextBlock","text":"invisibly self","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TextBlock.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"TextBlock ‚Äî TextBlock","text":"","code":"block <- teal.reporter:::TextBlock$new() block$set_style(\"header2\")"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TextBlock.html","id":"method-get-style-","dir":"Reference","previous_headings":"","what":"Method get_style()","title":"TextBlock ‚Äî TextBlock","text":"Returns style TextBlock.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TextBlock.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"TextBlock ‚Äî TextBlock","text":"","code":"TextBlock$get_style()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TextBlock.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"TextBlock ‚Äî TextBlock","text":"character(1) style TextBlock","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TextBlock.html","id":"examples-2","dir":"Reference","previous_headings":"","what":"Examples","title":"TextBlock ‚Äî TextBlock","text":"","code":"block <- teal.reporter:::TextBlock$new() block$get_style()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TextBlock.html","id":"method-get-available-styles-","dir":"Reference","previous_headings":"","what":"Method get_available_styles()","title":"TextBlock ‚Äî TextBlock","text":"Returns array styles available TextBlock.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TextBlock.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"TextBlock ‚Äî TextBlock","text":"","code":"TextBlock$get_available_styles()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TextBlock.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"TextBlock ‚Äî TextBlock","text":"character array styles","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TextBlock.html","id":"examples-3","dir":"Reference","previous_headings":"","what":"Examples","title":"TextBlock ‚Äî TextBlock","text":"","code":"block <- teal.reporter:::TextBlock$new() block$get_available_styles()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TextBlock.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"TextBlock ‚Äî TextBlock","text":"objects class cloneable method.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TextBlock.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"TextBlock ‚Äî TextBlock","text":"","code":"TextBlock$clone(deep = FALSE)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TextBlock.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"TextBlock ‚Äî TextBlock","text":"deep Whether make deep clone.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/TextBlock.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TextBlock ‚Äî TextBlock","text":"","code":"## ------------------------------------------------ ## Method `TextBlock$new` ## ------------------------------------------------  block <- teal.reporter:::TextBlock$new()   ## ------------------------------------------------ ## Method `TextBlock$set_style` ## ------------------------------------------------  block <- teal.reporter:::TextBlock$new() block$set_style(\"header2\")   ## ------------------------------------------------ ## Method `TextBlock$get_style` ## ------------------------------------------------  block <- teal.reporter:::TextBlock$new() block$get_style() #> [1] \"default\"   ## ------------------------------------------------ ## Method `TextBlock$get_available_styles` ## ------------------------------------------------  block <- teal.reporter:::TextBlock$new() block$get_available_styles() #> [1] \"default\"  \"header2\"  \"header3\"  \"verbatim\""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/add_card_button_srv.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Card Button Server ‚Äî add_card_button_srv","title":"Add Card Button Server ‚Äî add_card_button_srv","text":"server adding views/cards Report. details see vignette: vignette(\"simpleReporter\", \"teal.reporter\").","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/add_card_button_srv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Card Button Server ‚Äî add_card_button_srv","text":"","code":"add_card_button_srv(id, reporter, card_fun)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/add_card_button_srv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Card Button Server ‚Äî add_card_button_srv","text":"id character(1) shiny module's id. reporter Reporter instance. card_fun function returns ReportCard instance, function atcardargument optional comment.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/add_card_button_srv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Card Button Server ‚Äî add_card_button_srv","text":"shiny::moduleServer","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/add_card_button_srv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add Card Button Server ‚Äî add_card_button_srv","text":"module allows using child ReportCard instead ReportCard. properly support , instance child class must passed default value card argument card_fun function. See :","code":"CustomReportCard <- R6::R6Class( # nolint: object_name_linter.   classname = \"CustomReportCard\",   inherit = teal.reporter::ReportCard )  custom_function <- function(card = CustomReportCard$new()) {   card }"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/add_card_button_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Card Button User Interface ‚Äî add_card_button_ui","title":"Add Card Button User Interface ‚Äî add_card_button_ui","text":"button adding views/cards Report. details see vignette: vignette(\"simpleReporter\", \"teal.reporter\").","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/add_card_button_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Card Button User Interface ‚Äî add_card_button_ui","text":"","code":"add_card_button_ui(id)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/add_card_button_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Card Button User Interface ‚Äî add_card_button_ui","text":"id character(1) shiny module's id.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/add_card_button_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Card Button User Interface ‚Äî add_card_button_ui","text":"shiny::tagList","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/as_yaml_auto.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse a Named List to the Rmd yaml Header ‚Äî as_yaml_auto","title":"Parse a Named List to the Rmd yaml Header ‚Äî as_yaml_auto","text":"parse named list Rmd yaml header, developer gets automatically tabulated Rmd yaml header. non nested (flat) list processed, nested list directly processed yaml::.yaml function. Rmd yaml header fields vector supported, c(\"author\", \"date\", \"title\", \"subtitle\", \"abstract\", \"keywords\", \"subject\", \"description\", \"category\", \"lang\"). Moreover outputfield types rmarkdown package arguments supported.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/as_yaml_auto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse a Named List to the Rmd yaml Header ‚Äî as_yaml_auto","text":"","code":"as_yaml_auto(   input_list,   as_header = TRUE,   convert_logi = TRUE,   multi_output = FALSE,   silent = FALSE )"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/as_yaml_auto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse a Named List to the Rmd yaml Header ‚Äî as_yaml_auto","text":"input_list named list non nested slots names values compatible Rmd yaml header. as_header logical optionally wrap result md_header(), default TRUE. convert_logi logical convert character values logical, recognized quoted yaml logical values , default TRUE. multi_output logical multi output slots input argument, default FALSE. silent logical suppress messages warnings, default FALSE.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/as_yaml_auto.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse a Named List to the Rmd yaml Header ‚Äî as_yaml_auto","text":"character rmd_yaml_header class, result yaml::.yaml, optionally wrapped md_header().","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/as_yaml_auto.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse a Named List to the Rmd yaml Header ‚Äî as_yaml_auto","text":"","code":"# nested so using yaml::as.yaml directly as_yaml_auto(   list(author = \"\", output = list(pdf_document = list(toc = TRUE))) ) #> --- #> author: '' #> output: #>   pdf_document: #>     toc: yes #> ---  # auto parsing for a flat list, like shiny input input <- list(author = \"\", output = \"pdf_document\", toc = TRUE, keep_tex = TRUE) as_yaml_auto(input) #> --- #> author: '' #> output: #>   pdf_document: #>     toc: yes #>     keep_tex: yes #> ---  as_yaml_auto(list(author = \"\", output = \"pdf_document\", toc = TRUE, keep_tex = \"TRUE\")) #> The 'TRUE' value should be a logical, so it is automatically converted. #> --- #> author: '' #> output: #>   pdf_document: #>     toc: yes #>     keep_tex: yes #> ---  as_yaml_auto(list(   author = \"\", output = \"pdf_document\", toc = TRUE, keep_tex = TRUE,   wrong = 2 )) #> Warning: Not recognized and skipped arguments: wrong #> --- #> author: '' #> output: #>   pdf_document: #>     toc: yes #>     keep_tex: yes #> ---  as_yaml_auto(list(author = \"\", output = \"pdf_document\", toc = TRUE, keep_tex = 2),   silent = TRUE ) #> --- #> author: '' #> output: #>   pdf_document: #>     toc: yes #>     keep_tex: 2.0 #> ---  input <- list(author = \"\", output = \"pdf_document\", toc = TRUE, keep_tex = \"True\") as_yaml_auto(input) #> The 'True' value should be a logical, so it is automatically converted. #> --- #> author: '' #> output: #>   pdf_document: #>     toc: yes #>     keep_tex: yes #> --- as_yaml_auto(input, convert_logi = TRUE, silent = TRUE) #> --- #> author: '' #> output: #>   pdf_document: #>     toc: yes #>     keep_tex: yes #> --- as_yaml_auto(input, silent = TRUE) #> --- #> author: '' #> output: #>   pdf_document: #>     toc: yes #>     keep_tex: yes #> --- as_yaml_auto(input, convert_logi = FALSE, silent = TRUE) #> --- #> author: '' #> output: #>   pdf_document: #>     toc: yes #>     keep_tex: 'True' #> ---  as_yaml_auto(   list(     author = \"\", output = \"pdf_document\",     output = \"html_document\", toc = TRUE, keep_tex = TRUE   ),   multi_output = TRUE ) #> --- #> author: '' #> output: #>   pdf_document: #>     toc: yes #>     keep_tex: yes #>   html_document: #>     toc: yes #> --- as_yaml_auto(   list(     author = \"\", output = \"pdf_document\",     output = \"html_document\", toc = \"True\", keep_tex = TRUE   ),   multi_output = TRUE ) #> The 'True' value should be a logical, so it is automatically converted. #> --- #> author: '' #> output: #>   pdf_document: #>     toc: yes #>     keep_tex: yes #>   html_document: #>     toc: yes #> ---"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/conv_str_logi.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a character of a yaml boolean to a logical value ‚Äî conv_str_logi","title":"Convert a character of a yaml boolean to a logical value ‚Äî conv_str_logi","text":"convert character yaml boolean logical value.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/conv_str_logi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a character of a yaml boolean to a logical value ‚Äî conv_str_logi","text":"","code":"conv_str_logi(   input,   name = \"\",   pos_logi = c(\"TRUE\", \"true\", \"True\", \"yes\", \"y\", \"Y\", \"on\"),   neg_logi = c(\"FALSE\", \"false\", \"False\", \"no\", \"n\", \"N\", \"off\"),   silent = TRUE )"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/conv_str_logi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a character of a yaml boolean to a logical value ‚Äî conv_str_logi","text":"input character name charcter pos_logi character vector yaml values treated TRUE. neg_logi character vector yaml values treated FALSE. silent logical suppress messages warnings.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/conv_str_logi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a character of a yaml boolean to a logical value ‚Äî conv_str_logi","text":"input argument appropriate logical value.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/conv_str_logi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a character of a yaml boolean to a logical value ‚Äî conv_str_logi","text":"","code":"teal.reporter:::conv_str_logi(\"TRUE\") #> [1] TRUE teal.reporter:::conv_str_logi(\"True\") #> [1] TRUE  teal.reporter:::conv_str_logi(\"off\") #> [1] FALSE teal.reporter:::conv_str_logi(\"n\") #> [1] FALSE  teal.reporter:::conv_str_logi(\"sth\") #> [1] \"sth\""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/download_report_button_srv.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Button Server ‚Äî download_report_button_srv","title":"Download Button Server ‚Äî download_report_button_srv","text":"server downloading Report. details see vignette: vignette(\"simpleReporter\", \"teal.reporter\").","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/download_report_button_srv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Button Server ‚Äî download_report_button_srv","text":"","code":"download_report_button_srv(   id,   reporter,   rmd_output = c(\"html_document\", \"pdf_document\", \"powerpoint_presentation\",     \"word_document\"),   rmd_yaml_args = list(author = \"NEST\", title = \"Report\", date =     as.character(Sys.Date()), output = \"html_document\") )"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/download_report_button_srv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download Button Server ‚Äî download_report_button_srv","text":"id character(1) shiny module's id. reporter Reporter instance. rmd_output character vector rmarkdown output types, default possible c(\"pdf_document\", \"html_document\", \"powerpoint_presentation\", \"word_document\"). rmd_yaml_args named list vector Rmd yaml header fields default values. Default list(author = \"NEST\", title = \"Report\", date = Sys.Date(), output = \"html_document\"). Please update values moment.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/download_report_button_srv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download Button Server ‚Äî download_report_button_srv","text":"shiny::moduleServer","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/download_report_button_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Button Reporter User Interface ‚Äî download_report_button_ui","title":"Download Button Reporter User Interface ‚Äî download_report_button_ui","text":"button downloading Report. details see vignette: vignette(\"simpleReporter\", \"teal.reporter\").","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/download_report_button_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Button Reporter User Interface ‚Äî download_report_button_ui","text":"","code":"download_report_button_ui(id)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/download_report_button_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download Button Reporter User Interface ‚Äî download_report_button_ui","text":"id character(1) shiny module's id.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/download_report_button_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download Button Reporter User Interface ‚Äî download_report_button_ui","text":"shiny::tagList","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/md_header.html","id":null,"dir":"Reference","previous_headings":"","what":"wrap a yaml string to the markdown header ‚Äî md_header","title":"wrap a yaml string to the markdown header ‚Äî md_header","text":"wrap yaml string markdown header.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/md_header.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"wrap a yaml string to the markdown header ‚Äî md_header","text":"","code":"md_header(x)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/md_header.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"wrap a yaml string to the markdown header ‚Äî md_header","text":"x character yaml formatted string.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/md_header.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"wrap a yaml string to the markdown header ‚Äî md_header","text":"","code":"yaml <- list(   author = teal.reporter:::yaml_quoted(\"NEST\"),   title = teal.reporter:::yaml_quoted(\"Report\"),   date = teal.reporter:::yaml_quoted(\"07/04/2019\"),   output = list(pdf_document = list(keep_tex = TRUE)) ) teal.reporter:::md_header(yaml::as.yaml(yaml)) #> [1] \"---\\nauthor: \\\"NEST\\\"\\ntitle: \\\"Report\\\"\\ndate: \\\"07/04/2019\\\"\\noutput:\\n  pdf_document:\\n    keep_tex: yes\\n---\\n\""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/print.rmd_yaml_header.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for the yaml_header class ‚Äî print.rmd_yaml_header","title":"Print method for the yaml_header class ‚Äî print.rmd_yaml_header","text":"Print method yaml_header class.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/print.rmd_yaml_header.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for the yaml_header class ‚Äî print.rmd_yaml_header","text":"","code":"# S3 method for rmd_yaml_header print(x, ...)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/print.rmd_yaml_header.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for the yaml_header class ‚Äî print.rmd_yaml_header","text":"x rmd_yaml_header class object. ... optional text.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/print.rmd_yaml_header.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print method for the yaml_header class ‚Äî print.rmd_yaml_header","text":"","code":"input <- list(author = \"\", output = \"pdf_document\", toc = TRUE, keep_tex = TRUE) out <- as_yaml_auto(input) out #> --- #> author: '' #> output: #>   pdf_document: #>     toc: yes #>     keep_tex: yes #> --- print(out) #> --- #> author: '' #> output: #>   pdf_document: #>     toc: yes #>     keep_tex: yes #> ---"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/report_render_and_compress.html","id":null,"dir":"Reference","previous_headings":"","what":"Render the Report ‚Äî report_render_and_compress","title":"Render the Report ‚Äî report_render_and_compress","text":"render report zip created directory.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/report_render_and_compress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render the Report ‚Äî report_render_and_compress","text":"","code":"report_render_and_compress(reporter, input_list, file = tempdir())"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/report_render_and_compress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render the Report ‚Äî report_render_and_compress","text":"reporter Reporter instance. input_list list like shiny input converted regular named list. file character copy returned directory.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/report_render_and_compress.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Render the Report ‚Äî report_render_and_compress","text":"file argument, invisibly.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/reporter_previewer_srv.html","id":null,"dir":"Reference","previous_headings":"","what":"Reporter Previewer Server ‚Äî reporter_previewer_srv","title":"Reporter Previewer Server ‚Äî reporter_previewer_srv","text":"server supporting functionalities reporter previewer","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/reporter_previewer_srv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reporter Previewer Server ‚Äî reporter_previewer_srv","text":"","code":"reporter_previewer_srv(   id,   reporter,   rmd_yaml_args = list(author = \"NEST\", title = \"Report\", date =     as.character(Sys.Date()), output = \"html_document\") )"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/reporter_previewer_srv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reporter Previewer Server ‚Äî reporter_previewer_srv","text":"id character(1) shiny module's id. reporter Reporter instance rmd_yaml_args named list vector Rmd yaml header fields default values. Default list(author = \"NEST\", title = \"Report\", date = Sys.Date(), output = \"html_document\"). Please update values moment.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/reporter_previewer_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"Reporter Previewer User Interface ‚Äî reporter_previewer_ui","title":"Reporter Previewer User Interface ‚Äî reporter_previewer_ui","text":"reporter previewer user interface visualize manipulate already added report Cards","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/reporter_previewer_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reporter Previewer User Interface ‚Äî reporter_previewer_ui","text":"","code":"reporter_previewer_ui(   id,   rmd_output = c(\"html_document\", \"pdf_document\", \"powerpoint_presentation\",     \"word_document\"),   rmd_yaml_args = list(author = \"NEST\", title = \"Report\", date =     as.character(Sys.Date()), output = \"html_document\") )"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/reporter_previewer_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reporter Previewer User Interface ‚Äî reporter_previewer_ui","text":"id character(1) shiny module's id. rmd_output character vector rmarkdown output types, default possible c(\"pdf_document\", \"html_document\", \"powerpoint_presentation\", \"word_document\"). rmd_yaml_args named list vector Rmd yaml header fields default values. Default list(author = \"NEST\", title = \"Report\", date = Sys.Date(), output = \"html_document\"). Please update values moment.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/reset_report_button_srv.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset Button Server ‚Äî reset_report_button_srv","title":"Reset Button Server ‚Äî reset_report_button_srv","text":"server resetting Report content. details see vignette: vignette(\"simpleReporter\", \"teal.reporter\").","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/reset_report_button_srv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset Button Server ‚Äî reset_report_button_srv","text":"","code":"reset_report_button_srv(id, reporter)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/reset_report_button_srv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset Button Server ‚Äî reset_report_button_srv","text":"id character(1) shiny module's id. reporter Reporter instance.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/reset_report_button_srv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset Button Server ‚Äî reset_report_button_srv","text":"shiny::moduleServer","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/reset_report_button_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset Button Reporter User Interface ‚Äî reset_report_button_ui","title":"Reset Button Reporter User Interface ‚Äî reset_report_button_ui","text":"button resetting report content. details see vignette: vignette(\"simpleReporter\", \"teal.reporter\").","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/reset_report_button_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset Button Reporter User Interface ‚Äî reset_report_button_ui","text":"","code":"reset_report_button_ui(id)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/reset_report_button_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset Button Reporter User Interface ‚Äî reset_report_button_ui","text":"id character(1) shiny module's id.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/reset_report_button_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset Button Reporter User Interface ‚Äî reset_report_button_ui","text":"shiny::tagList","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/rmd_output_arguments.html","id":null,"dir":"Reference","previous_headings":"","what":"Get document output arguments from the rmarkdown package ‚Äî rmd_output_arguments","title":"Get document output arguments from the rmarkdown package ‚Äî rmd_output_arguments","text":"get document output arguments rmarkdown package","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/rmd_output_arguments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get document output arguments from the rmarkdown package ‚Äî rmd_output_arguments","text":"","code":"rmd_output_arguments(output_name, default_values = FALSE)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/rmd_output_arguments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get document output arguments from the rmarkdown package ‚Äî rmd_output_arguments","text":"output_name character rmarkdown output name. default_values logical return default values argument.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/rmd_output_arguments.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get document output arguments from the rmarkdown package ‚Äî rmd_output_arguments","text":"","code":"rmd_output_arguments(\"pdf_document\") #>  [1] \"toc\"                \"toc_depth\"          \"number_sections\"    #>  [4] \"fig_width\"          \"fig_height\"         \"fig_crop\"           #>  [7] \"fig_caption\"        \"dev\"                \"df_print\"           #> [10] \"highlight\"          \"template\"           \"keep_tex\"           #> [13] \"keep_md\"            \"latex_engine\"       \"citation_package\"   #> [16] \"includes\"           \"md_extensions\"      \"output_extensions\"  #> [19] \"pandoc_args\"        \"extra_dependencies\" rmd_output_arguments(\"pdf_document\", TRUE) #> $toc #> [1] FALSE #>  #> $toc_depth #> [1] 2 #>  #> $number_sections #> [1] FALSE #>  #> $fig_width #> [1] 6.5 #>  #> $fig_height #> [1] 4.5 #>  #> $fig_crop #> [1] \"auto\" #>  #> $fig_caption #> [1] TRUE #>  #> $dev #> [1] \"pdf\" #>  #> $df_print #> [1] \"default\" #>  #> $highlight #> [1] \"default\" #>  #> $template #> [1] \"default\" #>  #> $keep_tex #> [1] FALSE #>  #> $keep_md #> [1] FALSE #>  #> $latex_engine #> [1] \"pdflatex\" #>  #> $citation_package #> c(\"default\", \"natbib\", \"biblatex\") #>  #> $includes #> NULL #>  #> $md_extensions #> NULL #>  #> $output_extensions #> NULL #>  #> $pandoc_args #> NULL #>  #> $extra_dependencies #> NULL #>"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/rmd_outputs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get document output types from the rmarkdown package ‚Äî rmd_outputs","title":"Get document output types from the rmarkdown package ‚Äî rmd_outputs","text":"get document output types rmarkdown package.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/rmd_outputs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get document output types from the rmarkdown package ‚Äî rmd_outputs","text":"","code":"rmd_outputs()"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/rmd_outputs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get document output types from the rmarkdown package ‚Äî rmd_outputs","text":"character vector.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/rmd_outputs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get document output types from the rmarkdown package ‚Äî rmd_outputs","text":"","code":"rmd_outputs() #>  [1] \"beamer_presentation\"      \"context_document\"         #>  [3] \"github_document\"          \"html_document\"            #>  [5] \"html_document_base\"       \"html_extras_for_document\" #>  [7] \"ioslides_presentation\"    \"latex_document\"           #>  [9] \"md_document\"              \"odt_document\"             #> [11] \"pdf_document\"             \"powerpoint_presentation\"  #> [13] \"rtf_document\"             \"slidy_presentation\"       #> [15] \"word_document\""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/simple_reporter_srv.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple Reporter Server ‚Äî simple_reporter_srv","title":"Simple Reporter Server ‚Äî simple_reporter_srv","text":"three buttons adding cards, downloading resetting Report. add module add_report_card_simple id, download module download_button_simple id reset module reset_button_simple id. details see vignette: vignette(\"simpleReporter\", \"teal.reporter\").","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/simple_reporter_srv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple Reporter Server ‚Äî simple_reporter_srv","text":"","code":"simple_reporter_srv(id, reporter, card_fun)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/simple_reporter_srv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple Reporter Server ‚Äî simple_reporter_srv","text":"id character(1) shiny module's id. reporter Reporter instance. card_fun function returns ReportCard instance, function atcardargument optional comment.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/simple_reporter_srv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simple Reporter Server ‚Äî simple_reporter_srv","text":"shiny::moduleServer","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/simple_reporter_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple Reporter User Interface ‚Äî simple_reporter_ui","title":"Simple Reporter User Interface ‚Äî simple_reporter_ui","text":"three buttons adding cards, downloading resetting Report. details see vignette: vignette(\"simpleReporter\", \"teal.reporter\").","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/simple_reporter_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple Reporter User Interface ‚Äî simple_reporter_ui","text":"","code":"simple_reporter_ui(id)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/simple_reporter_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple Reporter User Interface ‚Äî simple_reporter_ui","text":"id character(1) shiny module's id.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/simple_reporter_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simple Reporter User Interface ‚Äî simple_reporter_ui","text":"shiny.tag","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/simple_reporter_ui.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simple Reporter User Interface ‚Äî simple_reporter_ui","text":"","code":"if (interactive()) {   shiny::shinyApp(     ui = shiny::fluidPage(simple_reporter_ui(\"simple\")),     server = function(input, output, session) {       simple_reporter_srv(\"simple\", Reporter$new(), function(card) card)     }   ) }"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/teal.reporter.html","id":null,"dir":"Reference","previous_headings":"","what":"Reporting tools for shiny modules. ‚Äî teal.reporter","title":"Reporting tools for shiny modules. ‚Äî teal.reporter","text":"collection tools creating, previewing modifying reports shiny modules.","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/yaml_quoted.html","id":null,"dir":"Reference","previous_headings":"","what":"quoted string for yaml ‚Äî yaml_quoted","title":"quoted string for yaml ‚Äî yaml_quoted","text":"add quoted attribute yaml package","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/yaml_quoted.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"quoted string for yaml ‚Äî yaml_quoted","text":"","code":"yaml_quoted(x)"},{"path":"https://insightsengineering.github.io/teal.reporter/reference/yaml_quoted.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"quoted string for yaml ‚Äî yaml_quoted","text":"x character","code":""},{"path":"https://insightsengineering.github.io/teal.reporter/reference/yaml_quoted.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"quoted string for yaml ‚Äî yaml_quoted","text":"","code":"yaml <- list(   author = teal.reporter:::yaml_quoted(\"NEST\"),   title = teal.reporter:::yaml_quoted(\"Report\"),   date = teal.reporter:::yaml_quoted(\"07/04/2019\"),   output = list(pdf_document = list(keep_tex = TRUE)) ) yaml::as.yaml(yaml) #> [1] \"author: \\\"NEST\\\"\\ntitle: \\\"Report\\\"\\ndate: \\\"07/04/2019\\\"\\noutput:\\n  pdf_document:\\n    keep_tex: yes\\n\""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.reporter/news/index.html","id":"tealreporter-010","dir":"Changelog","previous_headings":"","what":"teal.reporter 0.1.0","title":"teal.reporter 0.1.0","text":"Initialize package.","code":""}]
