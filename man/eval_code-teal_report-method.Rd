% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/teal_report-eval_code.R
\name{eval_code,teal_report-method}
\alias{eval_code,teal_report-method}
\title{Evaluate code in \code{qenv}}
\usage{
\S4method{eval_code}{teal_report}(object, code, keep_output = NULL, code_block_opts = list(), ...)
}
\arguments{
\item{object}{(\code{teal_report})}

\item{code}{(\code{character}, \code{language} or \code{expression}) code to evaluate.
It is possible to preserve original formatting of the \code{code} by providing a \code{character} or an
\code{expression} being a result of \code{parse(keep.source = TRUE)}.}

\item{keep_output}{(\code{character} or \code{NULL}) Names of output objects in the environment
that are will be added in the card for the reporter.
These are shown in the card via the \code{\link[tools:toHTML]{tools::toHTML()}} and \code{\link[=to_rmd]{to_rmd()}} implementations.}

\item{code_block_opts}{(\code{list}) Additional options for the R code chunk in R Markdown.}

\item{...}{(\code{\link{dots}}) additional arguments passed to future methods.}
}
\value{
\code{teal_reporter} environment with the code evaluated and the outputs added
to the card or \code{qenv.error} if evaluation fails.
}
\description{
Evaluate code in \code{qenv}
}
\details{
\code{eval_code()} evaluates given code in the \code{qenv} environment and appends it to the \code{code} slot.
Thus, if the \code{qenv} had been instantiated empty, contents of the environment are always a result of the stored code.
}
\examples{
# evaluate code in qenv
q <- qenv()
q <- eval_code(q, "a <- 1")
q <- eval_code(q, "b <- 2L # with comment")
q <- eval_code(q, quote(library(checkmate)))
q <- eval_code(q, expression(assert_number(a)))
}
\seealso{
\link[teal.code]{within.qenv}
}
