% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TableBlock.R
\name{TableBlock}
\alias{TableBlock}
\title{\code{TableBlock}}
\description{
\code{TableBlock}

\code{TableBlock}
}
\examples{

## ------------------------------------------------
## Method `TableBlock$set_content`
## ------------------------------------------------

block <- teal.reporter:::TableBlock$new()
block$set_content(iris)

}
\keyword{internal}
\section{Super class}{
\code{\link[teal.reporter:ContentBlock]{teal.reporter::ContentBlock}} -> \code{TableBlock}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{TableBlock$new()}}
\item \href{#method-set_content}{\code{TableBlock$set_content()}}
\item \href{#method-finalize}{\code{TableBlock$finalize()}}
\item \href{#method-clone}{\code{TableBlock$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="teal.reporter" data-topic="ContentBlock" data-id="get_content">}\href{../../teal.reporter/html/ContentBlock.html#method-get_content}{\code{teal.reporter::ContentBlock$get_content()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Returns a new \code{TableBlock} object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TableBlock$new(table)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{table}}{(\code{data.frame}, \code{DT}, \code{rtables}, \code{TableTree}) a table assigned to this \code{TableBlock}}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
a \code{TableBlock} object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_content"></a>}}
\if{latex}{\out{\hypertarget{method-set_content}{}}}
\subsection{Method \code{set_content()}}{
Sets content of this \code{TableBlock}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TableBlock$set_content(content)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{content}}{(\code{data.frame}, \code{rtables}) a table assigned to this \code{TableBlock}}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
throws if argument is not a table-like object.
}

\subsection{Returns}{
invisibly self
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{block <- teal.reporter:::TableBlock$new()
block$set_content(iris)

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-finalize"></a>}}
\if{latex}{\out{\hypertarget{method-finalize}{}}}
\subsection{Method \code{finalize()}}{
finalize of this \code{TableBlock}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TableBlock$finalize()}\if{html}{\out{</div>}}
}

\subsection{Details}{
Removes the temporary file created in the constructor.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TableBlock$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
